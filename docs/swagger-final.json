{
  "openapi": "3.0.0",
  "info": {
    "title": "SimWeGo API - Complete eSIM Management Platform",
    "description": "\nSimWeGo API provides comprehensive eSIM management services.\n\n## Authentication\n\nAll endpoints require your SimWeGo API key:\n- **Header**: `Authorization: Bearer YOUR_SIMWEGO_API_KEY`\n- Contact support@simwego.com to obtain your API key\n\n## Features\n\nComplete eSIM management platform with 85+ endpoints covering:\n- Bundle and package management\n- Order processing and tracking  \n- Agent and user management\n- Network configurations\n- Issue reporting and support\n",
    "version": "1.0.0",
    "contact": {
      "name": "SimWeGo Support",
      "email": "support@simwego.com"
    }
  },
  "servers": [
    {
      "url": "https://api.simwego.com",
      "description": "Production API"
    },
    {
      "url": "http://localhost:3001",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API_KEY",
        "description": "Use your SimWeGo API key as Bearer token"
      }
    },
    "schemas": {
      "AddAgentRequest": {
        "additionalProperties": false,
        "properties": {
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-]+)(\\.[a-zA-Z]{2,5}){1,2}$",
            "type": "string"
          },
          "is_active": {
            "default": false,
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "example": "john.snow",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "password": {
            "example": "$3343JcS2412345",
            "maxLength": 30,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{15,})",
            "type": "string",
            "writeOnly": true
          },
          "role_name": {
            "example": "ResellerAdmin",
            "maxLength": 45,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "username": {
            "example": "john.snow",
            "maxLength": 30,
            "minLength": 1,
            "pattern": "^[a-zA-Z][a-zA-Z0-9_.-]*$",
            "type": "string"
          }
        },
        "required": [
          "email",
          "name",
          "password",
          "role_name",
          "username"
        ],
        "type": "object"
      },
      "AddAgentResponse": {
        "additionalProperties": false,
        "example": {
          "agent_id": "507f191e810c19729de860ea",
          "developer_message": "Operation Succcessful",
          "message": "Agent Added Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "agent_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Agent Added Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddBranchRequest": {
        "additionalProperties": false,
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/AddResellerRequest_agent"
          },
          "branch_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Branch_contact"
          },
          "is_active": {
            "default": true,
            "type": "boolean"
          },
          "limit": {
            "exclusiveMinimum": false,
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": -1,
            "type": "number"
          },
          "limit_consumption": {
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": 0,
            "nullable": true,
            "readOnly": true,
            "type": "number"
          }
        },
        "required": [
          "agent",
          "branch_name",
          "contact",
          "is_active"
        ],
        "type": "object"
      },
      "AddBranchResponse": {
        "additionalProperties": false,
        "example": {
          "agent_id": "507f191e810c19729de860ea",
          "branch_id": "507f191e810c19729de860ea",
          "developer_message": "Operation Succcessful",
          "message": "Branch Added Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "agent_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Branch Added Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddIssueReportRequest": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "List of attached files.",
            "items": {
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "issue_description": {
            "description": "Detailed description of the issue or concern.",
            "maxLength": 10000,
            "minLength": 3,
            "type": "string"
          },
          "issue_subject": {
            "description": "Summary of Issue",
            "maxLength": 500,
            "minLength": 3,
            "type": "string"
          },
          "issue_type": {
            "description": "Type of the issue (e.g., \"Technical Issue\" or \"Price-related Concern\").",
            "enum": [
              "Technical Issue",
              "Price-related Concern"
            ],
            "type": "string"
          },
          "priority": {
            "default": 3,
            "description": "Priority level of the issue (\"Critical :1\", \"High:2\", \"Medium:3\", or \"Low:4\").",
            "maximum": 4,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "issue_description",
          "issue_type"
        ],
        "type": "object"
      },
      "AddIssueReportResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Issue Reported Successfully",
          "report_id": "507f191e810c19729de860ea",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Issue Reported Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "report_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddResellerRequest": {
        "additionalProperties": false,
        "properties": {
          "active_vendors_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "agent": {
            "$ref": "#/components/schemas/AddResellerRequest_agent"
          },
          "balance": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "balance_warning_limit": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "callback_url": {
            "description": "callback url where reseller received the push notifications",
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(https?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          },
          "consumption_url": {
            "description": "consumption url where reseller received the consumption notifications",
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(https?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Reseller_contact"
          },
          "corp_rate_revenue": {
            "description": "rate revenue in percent for the corporate",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": 0,
            "type": "number"
          },
          "credit_limit": {
            "default": 0,
            "description": "postpaid limit",
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "credit_warning_limit": {
            "default": 0,
            "description": "credit warning limit in percentage",
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "currency_code": {
            "default": "USD",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "custom_email_template_data": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_expired": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_qr": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "data_consumption_email": {
            "$ref": "#/components/schemas/Reseller_data_consumption_email"
          },
          "data_expired_email": {
            "$ref": "#/components/schemas/Reseller_data_expired_email"
          },
          "default_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "email_settings": {
            "$ref": "#/components/schemas/Reseller_email_settings"
          },
          "image": {
            "description": "The image file of the user",
            "format": "binary",
            "type": "string"
          },
          "is_active": {
            "default": true,
            "type": "boolean"
          },
          "is_whitelabel": {
            "default": false,
            "type": "boolean"
          },
          "notification_type": {
            "default": "webhook",
            "enum": [
              "webhook"
            ],
            "type": "string"
          },
          "qr_code_email": {
            "$ref": "#/components/schemas/Reseller_qr_code_email"
          },
          "rate_revenue": {
            "default": 0,
            "description": "rate revenue in percent",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": 0,
            "type": "number"
          },
          "request_custom_email": {
            "default": true,
            "type": "boolean"
          },
          "reseller_category": {
            "type": "string"
          },
          "reseller_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_type": {
            "default": "prepaid",
            "enum": [
              "prepaid",
              "postpaid"
            ],
            "type": "string"
          },
          "retry_on_failed_after": {
            "default": 1,
            "type": "integer"
          },
          "support_topup": {
            "default": true,
            "type": "boolean"
          },
          "supports_multibranches": {
            "default": false,
            "type": "boolean"
          },
          "supports_promo": {
            "type": "boolean"
          },
          "supports_vouchers": {
            "type": "boolean"
          },
          "tenant_name": {
            "type": "string"
          },
          "vendors_for_balance_deduction_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "voucher_rate": {
            "example": 12,
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "agent",
          "balance",
          "contact",
          "currency_code",
          "is_active",
          "reseller_name",
          "reseller_type",
          "support_topup",
          "supports_multibranches"
        ],
        "type": "object"
      },
      "AddResellerRequest_agent": {
        "additionalProperties": false,
        "properties": {
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-]+)(\\.[a-zA-Z]{2,5}){1,2}$",
            "type": "string"
          },
          "name": {
            "example": "john snow",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "password": {
            "example": "$3343JcS2412345",
            "maxLength": 30,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{15,})",
            "type": "string",
            "writeOnly": true
          },
          "username": {
            "example": "john.snow",
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "email",
          "name",
          "password",
          "username"
        ],
        "type": "object"
      },
      "AddResellerResponse": {
        "additionalProperties": false,
        "example": {
          "agent_id": "507f191e810c19729de860ea",
          "developer_message": "Operation Succcessful",
          "message": "Reseller Added Successfully",
          "reseller_id": "507f191e810c19729de860ea",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "agent_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Reseller Added Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Admin_custom_corporate_price_csv_body": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "format": "binary",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "type": "object"
      },
      "Agent": {
        "additionalProperties": false,
        "properties": {
          "agent_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "name": {
            "example": "john snow",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "role_name": {
            "example": "ResellerAdmin",
            "maxLength": 45,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "username": {
            "example": "john.doe",
            "maximum": 30,
            "minimum": 1,
            "type": "string"
          }
        },
        "required": [
          "agent_id",
          "date_created",
          "email",
          "is_active",
          "name",
          "reseller_id",
          "role_name",
          "username"
        ],
        "type": "object"
      },
      "AgentProfile": {
        "additionalProperties": false,
        "example": {
          "agent_id": "507f191e810c19729de860ea",
          "branch_id": "507f191e810c19729de860ea",
          "date_created": "2000-01-23T04:56:07+00:00",
          "email": "xyz@hotmail.com",
          "is_active": false,
          "name": "john",
          "reseller": {
            "active_vendors_list": [
              "active_vendors_list",
              "active_vendors_list"
            ],
            "additional_currency_code": "SAR",
            "balance": 0.08008282,
            "balance_in_additional_currency": 0.6027456,
            "balance_warning_limit": 1000,
            "callback_url": "www.xyz.com",
            "contact": {
              "address": "address",
              "emails": [
                "xyz@hotmail.com",
                "xyz@hotmail.com"
              ],
              "phones": [
                "phones",
                "phones"
              ],
              "website": "www.xyz.com"
            },
            "corp_rate_revenue": 12,
            "credit_limit": 0.14658129,
            "credit_limit_in_additional_currency": 0.5637377,
            "credit_warning_limit": 59.621338,
            "currency_code": "USD",
            "custom_email_template_data": "",
            "custom_email_template_expired": "",
            "custom_email_template_qr": "",
            "data_consumption_email": {
              "body_1": "body_1",
              "body_2": "body_2",
              "company_name_team": "company_name_team",
              "email-image_type": "email-image_type",
              "email-logo_type": "email-logo_type",
              "email_image_consumption": "email_image_consumption",
              "email_logo": "email_logo",
              "facebook_link": "facebook_link",
              "footer": "footer",
              "greetings": "greetings",
              "instagram_link": "instagram_link",
              "subject_consumption": "subject_consumption",
              "website_link": "website_link",
              "whatsapp_number": "whatsapp_number"
            },
            "data_expired_email": {
              "body_1": "body_1",
              "body_2": "body_2",
              "company_name_team": "company_name_team",
              "email-image_type": "email-image_type",
              "email-logo_type": "email-logo_type",
              "email_image_expired": "email_image_expired",
              "email_logo": "email_logo",
              "facebook_link": "facebook_link",
              "footer": "footer",
              "greetings": "greetings",
              "instagram_link": "instagram_link",
              "subject_expired": "subject_expired",
              "website_link": "website_link",
              "whatsapp_number": "whatsapp_number"
            },
            "date_created": "2000-01-23",
            "default_currency_code": "USD",
            "developer_message": "Operation Succcessful",
            "email_settings": {
              "password": "password",
              "smtp_port": "smtp_port",
              "smtp_server": "smtp_server",
              "username": "xyz@hotmail.com"
            },
            "image": "",
            "image_type": "image_type",
            "is_active": false,
            "is_whitelabel": false,
            "notification_type": "notification_type",
            "qr_code_email": {
              "activation_code": "activation_code",
              "android_users": "android_users",
              "body_1": "body_1",
              "body_2": "body_2",
              "bundle_consumption_link": "bundle_consumption_link",
              "bundle_consumption_sentence": "bundle_consumption_sentence",
              "company_name_team": "company_name_team",
              "data_bundle_details": "data_bundle_details",
              "email-image_type": "email-image_type",
              "email-logo_type": "email-logo_type",
              "email_image_qrcode": "email_image_qrcode",
              "email_logo": "email_logo",
              "facebook_link": "facebook_link",
              "footer": "footer",
              "greetings": "greetings",
              "instagram_link": "instagram_link",
              "instructions_link": "instructions_link",
              "invoice_details": "invoice_details",
              "ios_users": "ios_users",
              "matching_id": "matching_id",
              "smdp_address": "smdp_address",
              "subject_qrcode": "subject_qrcode",
              "topup_link": "topup_link",
              "topup_sentence": "topup_sentence",
              "website_link": "website_link",
              "whatsapp_number": "whatsapp_number"
            },
            "rate_revenue": 12,
            "request_custom_email": true,
            "reseller_category": "reseller_category",
            "reseller_id": "507f191e810c19729de860ea",
            "reseller_name": "Nakhal",
            "reseller_type": "prepaid",
            "response_code": "1",
            "support_topup": false,
            "supports_multibranches": false,
            "supports_promo": true,
            "supports_vouchers": true,
            "tenant_name": "tenant_name",
            "title": "Success",
            "vendors_for_balance_deduction_list": [
              "vendors_for_balance_deduction_list",
              "vendors_for_balance_deduction_list"
            ],
            "voucher_rate": 12
          },
          "role_id": "507f191e810c19729de860ea",
          "username": "john.doe"
        },
        "properties": {
          "agent_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "name": {
            "example": "john",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller": {
            "$ref": "#/components/schemas/GetResellersResponse_resellers"
          },
          "role_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "username": {
            "example": "john.doe",
            "maximum": 30,
            "minimum": 1,
            "type": "string"
          }
        },
        "required": [
          "agent_id",
          "date_created",
          "email",
          "is_active",
          "name",
          "role_id",
          "username"
        ],
        "type": "object"
      },
      "AllNetworkList_networksResponse": {
        "additionalProperties": false,
        "example": {
          "country_code": "FRA",
          "is_shown": true,
          "network_id": "507f191e810c19729de860ea",
          "operator_list": [
            "Voda",
            "Voda"
          ],
          "vendor_code": "TEST",
          "vendor_name": "Saudi Arabian Rial"
        },
        "properties": {
          "country_code": {
            "example": "FRA",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "is_shown": {
            "default": true,
            "type": "boolean"
          },
          "network_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "operator_list": {
            "items": {
              "example": "Voda",
              "maxLength": 100,
              "minLength": 2,
              "pattern": "^[a-zA-Z ']+$",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "vendor_code": {
            "example": "Saudi Arabian Rial",
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssignBundleRequest": {
        "additionalProperties": false,
        "properties": {
          "bundle_code": {
            "example": "USA3GB_3102938429",
            "type": "string"
          },
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "name": {
            "example": "John Wick",
            "type": "string"
          },
          "order_reference": {
            "maxLength": 30,
            "type": "string"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssignBundleResponse": {
        "additionalProperties": false,
        "example": {
          "additional_currency_code": "SAR",
          "developer_message": "Operation Succcessful",
          "iccid": "iccid",
          "message": "Bundle Assigned Successfully",
          "order_id": "507f191e810c19729de860ea",
          "remaining_wallet_balance": 30,
          "remaining_wallet_balance_in_additional_currency": 30,
          "reseller_id": "507f191e810c19729de860ea",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "message": {
            "example": "Bundle Assigned Successfully",
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 30,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "in additional currency",
            "example": 30,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AvailableCurrenciesCSV_body": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "format": "binary",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "type": "object"
      },
      "Branch": {
        "additionalProperties": false,
        "properties": {
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "branch_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Branch_contact"
          },
          "date_created": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "is_active": {
            "default": true,
            "type": "boolean"
          },
          "limit": {
            "exclusiveMinimum": false,
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": -1,
            "nullable": true,
            "type": "number"
          },
          "limit_consumption": {
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": 0,
            "nullable": true,
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "required": [
          "branch_id",
          "branch_name",
          "date_created",
          "is_active",
          "reseller_id"
        ],
        "type": "object"
      },
      "Branch_contact": {
        "example": {
          "address": "address",
          "emails": [
            "xyz@hotmail.com",
            "xyz@hotmail.com"
          ],
          "phones": [
            "phones",
            "phones"
          ],
          "website": "www.xyz.com"
        },
        "nullable": true,
        "properties": {
          "address": {
            "maxLength": 300,
            "type": "string"
          },
          "emails": {
            "items": {
              "example": "xyz@hotmail.com",
              "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-]+)(\\.[a-zA-Z]{2,5}){1,2}$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "phones": {
            "items": {
              "pattern": "^\\+(?:[0-9] ?){6,14}[0-9]$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "website": {
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          }
        },
        "required": [
          "emails",
          "phones"
        ],
        "type": "object"
      },
      "BundleNetworkList": {
        "additionalProperties": false,
        "example": {
          "networks": [
            {
              "country_code": "FRA",
              "operator_list": [
                "Voda",
                "Voda"
              ]
            },
            {
              "country_code": "FRA",
              "operator_list": [
                "Voda",
                "Voda"
              ]
            }
          ],
          "networks_count": 1000
        },
        "properties": {
          "networks": {
            "items": {
              "$ref": "#/components/schemas/BundleNetworkList_networks"
            },
            "type": "array",
            "uniqueItems": true
          },
          "networks_count": {
            "example": 1000,
            "type": "integer"
          }
        },
        "required": [
          "networks"
        ],
        "type": "object"
      },
      "BundleNetworkList_networks": {
        "additionalProperties": false,
        "example": {
          "country_code": "FRA",
          "operator_list": [
            "Voda",
            "Voda"
          ]
        },
        "properties": {
          "country_code": {
            "example": "FRA",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "operator_list": {
            "items": {
              "example": "Voda",
              "maxLength": 100,
              "minLength": 2,
              "pattern": "^[a-zA-Z ']+$",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "CancelBundleRequest": {
        "additionalProperties": false,
        "properties": {
          "order_reference": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CancelBundleResponse": {
        "additionalProperties": false,
        "example": {
          "Message": "Order Canceled Successfully",
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Order Canceled Successfully",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CheckTokenResponse": {
        "additionalProperties": false,
        "properties": {
          "allowed_microservices": {
            "type": "object"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Token Valid",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompleteTransactionFailedResponse": {
        "additionalProperties": false,
        "properties": {
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 14,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "bundle_category": {
            "enum": [
              "country",
              "global",
              "region",
              "cruise"
            ],
            "type": "string"
          },
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "type": "string"
          },
          "bundle_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "client_email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "country_code": {
            "items": {
              "example": "USA",
              "maxLength": 4,
              "minLength": 3,
              "type": "string"
            },
            "type": "array"
          },
          "country_name": {
            "items": {
              "example": "United States",
              "type": "string"
            },
            "type": "array"
          },
          "currency_code": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "has_related_active_topups": {
            "type": "boolean"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_reference": {
            "maxLength": 30,
            "type": "string"
          },
          "order_status": {
            "enum": [
              "Failed"
            ],
            "type": "string"
          },
          "order_type": {
            "example": "BuyBundle",
            "type": "string"
          },
          "otp": {
            "format": "uuid",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "topup_an_expired_plan": {
            "type": "boolean"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompleteTransactionRequest": {
        "additionalProperties": false,
        "properties": {
          "order_reference": {
            "maxLength": 100,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CompleteTransactionResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Transaction Completed Successfully",
          "orders": [
            "",
            ""
          ],
          "response_code": "1",
          "title": "Success",
          "total_orders_count": 0
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Transaction Completed Successfully",
            "type": "string"
          },
          "orders": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CompleteTransactionSuccessfulResponse"
                },
                {
                  "$ref": "#/components/schemas/CompleteTransactionFailedResponse"
                }
              ]
            },
            "type": "array"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_orders_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CompleteTransactionSuccessfulResponse": {
        "additionalProperties": false,
        "properties": {
          "activation_code": {
            "type": "string"
          },
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 14,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "bundle_category": {
            "enum": [
              "country",
              "global",
              "region",
              "cruise"
            ],
            "type": "string"
          },
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_expiry_date": {
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "type": "string"
          },
          "bundle_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "client_email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "country_code": {
            "items": {
              "example": "USA",
              "maxLength": 4,
              "minLength": 3,
              "type": "string"
            },
            "type": "array"
          },
          "country_name": {
            "items": {
              "example": "United States",
              "type": "string"
            },
            "type": "array"
          },
          "currency_code": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "expiry_date": {
            "format": "date-time",
            "type": "string"
          },
          "has_related_active_topups": {
            "type": "boolean"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "matching_id": {
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_reference": {
            "maxLength": 30,
            "type": "string"
          },
          "order_status": {
            "enum": [
              "Successful",
              "Refunded"
            ],
            "type": "string"
          },
          "order_type": {
            "example": "BuyBundle",
            "type": "string"
          },
          "otp": {
            "format": "uuid",
            "type": "string"
          },
          "plan_started": {
            "type": "boolean"
          },
          "plan_status": {
            "type": "string"
          },
          "plan_uid": {
            "example": "6380d4efa3fb4",
            "type": "string"
          },
          "profile_expiry_date": {
            "type": "string"
          },
          "refund_reason": {
            "example": "User Did not have good coverage.",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "in additional",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "smdp_address": {
            "type": "string"
          },
          "topup_an_expired_plan": {
            "type": "boolean"
          },
          "vendor_expiry_date_profile": {
            "type": "number"
          },
          "vendor_expiry_days": {
            "type": "number"
          },
          "vendor_start_bundle": {
            "type": "boolean"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactObject": {
        "properties": {
          "address": {
            "maxLength": 300,
            "type": "string"
          },
          "emails": {
            "items": {
              "example": "xyz@hotmail.com",
              "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-]+)(\\.[a-zA-Z]{2,5}){1,2}$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "phones": {
            "items": {
              "pattern": "^\\+(?:[0-9] ?){6,14}[0-9]$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "website": {
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          }
        },
        "required": [
          "emails",
          "phones"
        ],
        "type": "object"
      },
      "CreateRoleRequest": {
        "additionalProperties": false,
        "properties": {
          "access_level": {
            "enum": [
              "basic",
              "medium",
              "sensitive"
            ],
            "example": "basic",
            "type": "string"
          },
          "description": {
            "example": "Has Full Authority Over Reseller",
            "maxLength": 2000,
            "minLength": 0,
            "pattern": "^[a-zA-Z .,']+$",
            "type": "string"
          },
          "name": {
            "example": "ResellerAdmin",
            "maxLength": 45,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "permission_level": {
            "format": "int32",
            "maximum": 3,
            "minimum": 1,
            "type": "integer"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/CreateRoleRequest_permissions"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "access_level",
          "description",
          "name",
          "permission_level",
          "permissions"
        ],
        "type": "object"
      },
      "CreateRoleRequest_permissions": {
        "example": {
          "api_name": "topupBundle",
          "permission_type": "Self"
        },
        "properties": {
          "api_name": {
            "example": "topupBundle",
            "type": "string"
          },
          "permission_type": {
            "example": "Self",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateRoleResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "This is a message",
          "response_code": "1",
          "role_id": "507f191e810c19729de860ea",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "This is a message",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "role_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CsvFile": {
        "additionalProperties": false,
        "properties": {
          "csv_file": {
            "format": "binary",
            "type": "string"
          }
        },
        "required": [
          "csv_file"
        ],
        "type": "object"
      },
      "CustomizeCorpPriceRequest": {
        "additionalProperties": false,
        "properties": {
          "bundles": {
            "items": {
              "$ref": "#/components/schemas/CustomizeCorpPriceRequest_bundles"
            },
            "type": "array",
            "uniqueItems": true
          },
          "reset_customizations": {
            "description": "if true, all custom prices will be reset and the rate revenue will be activated.",
            "type": "boolean"
          },
          "set_selling_revenue": {
            "description": "percentage",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": -100,
            "type": "number"
          }
        },
        "type": "object"
      },
      "CustomizeCorpPriceRequest_bundles": {
        "additionalProperties": false,
        "properties": {
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "custom_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "maximum": 99999999999999,
            "minimum": 0,
            "type": "number"
          },
          "is_active": {
            "type": "boolean"
          }
        },
        "required": [
          "bundle_code"
        ],
        "type": "object"
      },
      "CustomizeCurrenciesRequest": {
        "additionalProperties": false,
        "properties": {
          "currencies": {
            "items": {
              "$ref": "#/components/schemas/CustomizeCurrenciesRequest_currencies"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "CustomizeCurrenciesRequest_currencies": {
        "additionalProperties": false,
        "properties": {
          "currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "currency_name": {
            "example": "Saudi Arabian Rial",
            "maxLength": 100,
            "type": "string"
          },
          "currency_rate": {
            "description": "rate for one US dollar",
            "example": 12,
            "format": "float",
            "maximum": 99999999999999,
            "minimum": 0,
            "type": "number"
          },
          "is_available": {
            "type": "boolean"
          }
        },
        "required": [
          "currency_code"
        ],
        "type": "object"
      },
      "CustomizeCurrenciesResponse": {
        "additionalProperties": false,
        "example": {
          "currencies_not_found": [
            {
              "currency_code": "SAR",
              "currency_name": "Saudii Arabian Rial"
            },
            {
              "currency_code": "SAR",
              "currency_name": "Saudii Arabian Rial"
            }
          ],
          "detail": "Currencies have been modified Successfully",
          "developer_message": "Operation Succcessful",
          "invalid_currency_rates": [
            {
              "currency_code": "ZZZ",
              "currency_rate": 12
            },
            {
              "currency_code": "ZZZ",
              "currency_rate": 12
            }
          ],
          "message": "Currencies have been modified Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "currencies_not_found": {
            "items": {
              "$ref": "#/components/schemas/CustomizeCurrenciesResponse_currencies_not_found"
            },
            "type": "array",
            "uniqueItems": true
          },
          "detail": {
            "example": "Currencies have been modified Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "invalid_currency_rates": {
            "items": {
              "$ref": "#/components/schemas/CustomizeCurrenciesResponse_invalid_currency_rates"
            },
            "type": "array",
            "uniqueItems": true
          },
          "message": {
            "example": "Currencies have been modified Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomizeCurrenciesResponse_currencies_not_found": {
        "additionalProperties": false,
        "example": {
          "currency_code": "SAR",
          "currency_name": "Saudii Arabian Rial"
        },
        "properties": {
          "currency_code": {
            "example": "SAR",
            "type": "string"
          },
          "currency_name": {
            "example": "Saudii Arabian Rial",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomizeCurrenciesResponse_invalid_currency_rates": {
        "additionalProperties": false,
        "example": {
          "currency_code": "ZZZ",
          "currency_rate": 12
        },
        "properties": {
          "currency_code": {
            "example": "ZZZ",
            "type": "string"
          },
          "currency_rate": {
            "example": 12,
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CustomizePriceRequest": {
        "additionalProperties": false,
        "properties": {
          "bundles": {
            "items": {
              "$ref": "#/components/schemas/CustomizePriceRequest_bundles"
            },
            "type": "array",
            "uniqueItems": true
          },
          "reset_customizations": {
            "description": "if true, all custom prices will be reset and the rate revenue will be activated.",
            "type": "boolean"
          },
          "set_selling_revenue": {
            "description": "percentage",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": -100,
            "type": "number"
          }
        },
        "type": "object"
      },
      "CustomizePriceRequest_bundles": {
        "additionalProperties": false,
        "properties": {
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_tag": {
            "items": {
              "maxLength": 30,
              "type": "string"
            },
            "type": "array"
          },
          "custom_bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "maxLength": 100,
            "type": "string"
          },
          "custom_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "maximum": 99999999999999,
            "minimum": 0,
            "type": "number"
          },
          "is_active": {
            "type": "boolean"
          }
        },
        "required": [
          "bundle_code"
        ],
        "type": "object"
      },
      "CustomizePriceResponse": {
        "additionalProperties": false,
        "example": {
          "bundles_not_found": [
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562"
            },
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562"
            }
          ],
          "detail": "Bundle Does not exist.",
          "developer_message": "Operation Succcessful",
          "invalid_bundle_prices": [
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "custom_price": 12,
              "unit_price": 12
            },
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "custom_price": 12,
              "unit_price": 12
            }
          ],
          "message": "Bundle Retail Price Edited Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "bundles_not_found": {
            "items": {
              "$ref": "#/components/schemas/CustomizePriceResponse_bundles_not_found"
            },
            "type": "array",
            "uniqueItems": true
          },
          "detail": {
            "example": "Bundle Does not exist.",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "invalid_bundle_prices": {
            "items": {
              "$ref": "#/components/schemas/CustomizePriceResponse_invalid_bundle_prices"
            },
            "type": "array",
            "uniqueItems": true
          },
          "message": {
            "example": "Bundle Retail Price Edited Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomizePriceResponse_bundles_not_found": {
        "additionalProperties": false,
        "example": {
          "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562"
        },
        "properties": {
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomizePriceResponse_invalid_bundle_prices": {
        "additionalProperties": false,
        "example": {
          "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
          "custom_price": 12,
          "unit_price": 12
        },
        "properties": {
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "custom_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "unit_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "DeleteAgentResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Agent Deleted Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Agent Deleted Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteBranchResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Branch Deleted Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Branch Deleted Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteIssueReportResponse": {
        "additionalProperties": false,
        "example": {
          "Message": "Issue Report Deleted Successfully"
        },
        "properties": {
          "Message": {
            "example": "Issue Report Deleted Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteNetworkListResponse": {
        "additionalProperties": false,
        "example": {
          "Message": "Network Deleted Successfully"
        },
        "properties": {
          "Message": {
            "example": "Network Deleted Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteResellerResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Reseller Deleted Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Reseller Deleted Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeleteRoleResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "This is a message",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "This is a message",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditAgentRequest": {
        "additionalProperties": false,
        "properties": {
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "name": {
            "example": "john snow",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "password": {
            "example": "$3343JcS2412345",
            "maxLength": 30,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{15,})",
            "type": "string",
            "writeOnly": true
          },
          "password_confirmation": {
            "example": "$3343JcS2412345",
            "maxLength": 30,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{15,})",
            "type": "string",
            "writeOnly": true
          },
          "role_name": {
            "example": "ResellerAdmin",
            "maxLength": 45,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditAgentResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Agent Edited Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Agent Edited Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditBranchRequest": {
        "additionalProperties": false,
        "properties": {
          "branch_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Reseller_contact"
          },
          "is_active": {
            "default": true,
            "type": "boolean"
          },
          "limit": {
            "exclusiveMinimum": false,
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": -1,
            "nullable": true,
            "type": "number"
          },
          "limit_consumption": {
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": 0,
            "nullable": true,
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "EditBranchResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Branch Edited Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Branch Edited Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditIssueReportRequest": {
        "additionalProperties": false,
        "properties": {
          "attachments": {
            "description": "List of attached files.",
            "items": {
              "format": "binary",
              "type": "string"
            },
            "type": "array"
          },
          "message": {
            "description": "Detailed description of the issue or concern.",
            "maxLength": 10000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditIssueReportResponse": {
        "additionalProperties": false,
        "example": {
          "Message": "Issue Report Modified Successfully"
        },
        "properties": {
          "Message": {
            "example": "Issue Report Modified Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditResellerRequest": {
        "additionalProperties": false,
        "properties": {
          "active_vendors_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "balance_warning_limit": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "callback_url": {
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(https?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          },
          "consumption_url": {
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(https?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Reseller_contact"
          },
          "currency_code": {
            "default": "USD",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "custom_email_template_data": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_expired": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_qr": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "data_consumption_email": {
            "$ref": "#/components/schemas/Reseller_data_consumption_email"
          },
          "data_expired_email": {
            "$ref": "#/components/schemas/Reseller_data_expired_email"
          },
          "default_currency_code": {
            "default": "USD",
            "maxLength": 15,
            "type": "string"
          },
          "email_settings": {
            "$ref": "#/components/schemas/EditResellerRequest_email_settings"
          },
          "image": {
            "description": "The image file of the user",
            "format": "binary",
            "type": "string"
          },
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "is_whitelabel": {
            "default": false,
            "type": "boolean"
          },
          "notification_type": {
            "default": "webhook",
            "enum": [
              "webhook"
            ],
            "type": "string"
          },
          "qr_code_email": {
            "$ref": "#/components/schemas/Reseller_qr_code_email"
          },
          "request_custom_email": {
            "default": true,
            "type": "boolean"
          },
          "reseller_category": {
            "type": "string"
          },
          "reseller_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_type": {
            "default": "prepaid",
            "enum": [
              "prepaid",
              "postpaid"
            ],
            "type": "string"
          },
          "retry_on_failed_after": {
            "default": 1,
            "type": "integer"
          },
          "support_topup": {
            "default": false,
            "type": "boolean"
          },
          "supports_promo": {
            "type": "boolean"
          },
          "supports_vouchers": {
            "type": "boolean"
          },
          "tenant_name": {
            "type": "string"
          },
          "vendors_for_balance_deduction_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "voucher_rate": {
            "example": 12,
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          }
        },
        "type": "object"
      },
      "EditResellerRequest_email_settings": {
        "additionalProperties": false,
        "properties": {
          "password": {
            "maximum": 50,
            "minimum": 8,
            "type": "string"
          },
          "smtp_port": {
            "maxLength": 5,
            "minimum": 1,
            "pattern": "^[0-9]*$",
            "type": "string"
          },
          "smtp_server": {
            "type": "string"
          },
          "username": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditResellerResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Reseller Edited Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Reseller Edited Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditRoleRequest": {
        "additionalProperties": false,
        "properties": {
          "access_level": {
            "enum": [
              "basic",
              "medium",
              "sensitive"
            ],
            "example": "basic",
            "type": "string"
          },
          "description": {
            "example": "Has Full Authority Over Reseller",
            "maxLength": 2000,
            "minLength": 0,
            "pattern": "^[a-zA-Z .,']+$",
            "type": "string"
          },
          "name": {
            "example": "ResellerAdmin",
            "maxLength": 45,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "permission_level": {
            "format": "int32",
            "maximum": 3,
            "minimum": 1,
            "type": "integer"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/CreateRoleRequest_permissions"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EditRoleResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Role Edited Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Role Edited Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditTopupBalanceResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Wallet Topup Edited Successfully",
          "response_code": "1",
          "title": "Success",
          "wallet_balance": 1000
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Wallet Topup Edited Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "wallet_balance": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ForgotPasswordRequest": {
        "additionalProperties": false,
        "properties": {
          "captcha_token": {
            "example": "03Aeyuqwe978qwy7e7wqyeiouy21ey710ewquiey8712",
            "type": "string"
          },
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-]+)(\\.[a-zA-Z]{2,5}){1,2}$",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "type": "object"
      },
      "ForgotPasswordResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Password Reset Link Sent to email",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Password Reset Link Sent to email",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GenerateVoucherRequest": {
        "additionalProperties": false,
        "properties": {
          "amount": {
            "example": 30,
            "exclusiveMinimum": true,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "currency_code": {
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "expiry_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "generate_csv_file": {
            "type": "boolean"
          },
          "is_active": {
            "readOnly": true,
            "type": "boolean"
          },
          "quantity": {
            "example": 1,
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "reason": {
            "example": "When adventure calls, you gotta answer!",
            "maxLength": 300,
            "type": "string"
          },
          "voucher_name": {
            "example": "Adventure30",
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "voucher_type": {
            "enum": [
              "default",
              "triggerable"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency_code",
          "expiry_datetime",
          "generate_csv_file",
          "quantity",
          "voucher_name"
        ],
        "type": "object"
      },
      "GenerateVoucherResponse": {
        "additionalProperties": false,
        "example": {
          "csv_file": "",
          "developer_message": "Operation Succcessful",
          "message": "Voucher Generation Successful",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "csv_file": {
            "description": "The csv file for the user",
            "format": "binary",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Voucher Generation Successful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAffiliateProgramResponse": {
        "additionalProperties": false,
        "example": {
          "affiliate_id": "507f191e810c19729de860ea",
          "amount": 0.6027456,
          "discount_rate": 8.008282,
          "draft": true,
          "image_url": "image_url",
          "promo_code": "promo_code"
        },
        "properties": {
          "affiliate_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "amount": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "discount_rate": {
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "draft": {
            "type": "boolean"
          },
          "image_url": {
            "type": "string"
          },
          "promo_code": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAgentByEmailRequest": {
        "additionalProperties": false,
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAgentResponse": {
        "additionalProperties": false,
        "example": {
          "agent_id": "507f191e810c19729de860ea",
          "branch_id": "507f191e810c19729de860ea",
          "date_created": "2000-01-23T04:56:07+00:00",
          "email": "xyz@hotmail.com",
          "is_active": false,
          "name": "john snow",
          "reseller_id": "507f191e810c19729de860ea",
          "role_name": "ResellerAdmin",
          "username": "john.doe"
        },
        "properties": {
          "agent_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "name": {
            "example": "john snow",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "role_name": {
            "example": "ResellerAdmin",
            "maxLength": 45,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "username": {
            "example": "john.doe",
            "maximum": 30,
            "minimum": 1,
            "type": "string"
          }
        },
        "required": [
          "agent_id",
          "date_created",
          "email",
          "is_active",
          "name",
          "reseller_id",
          "role_name",
          "username"
        ],
        "type": "object"
      },
      "GetAgentsResponse": {
        "additionalProperties": false,
        "example": {
          "agents": [
            {
              "agent_id": "507f191e810c19729de860ea",
              "branch_id": "507f191e810c19729de860ea",
              "date_created": "2000-01-23T04:56:07+00:00",
              "email": "xyz@hotmail.com",
              "is_active": false,
              "name": "john snow",
              "reseller_id": "507f191e810c19729de860ea",
              "role_name": "ResellerAdmin",
              "username": "john.doe"
            },
            {
              "agent_id": "507f191e810c19729de860ea",
              "branch_id": "507f191e810c19729de860ea",
              "date_created": "2000-01-23T04:56:07+00:00",
              "email": "xyz@hotmail.com",
              "is_active": false,
              "name": "john snow",
              "reseller_id": "507f191e810c19729de860ea",
              "role_name": "ResellerAdmin",
              "username": "john.doe"
            }
          ],
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success",
          "total_agents_count": 0
        },
        "properties": {
          "agents": {
            "items": {
              "$ref": "#/components/schemas/GetAgentsResponse_agents"
            },
            "type": "array"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_agents_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetAgentsResponse_agents": {
        "additionalProperties": false,
        "example": {
          "agent_id": "507f191e810c19729de860ea",
          "branch_id": "507f191e810c19729de860ea",
          "date_created": "2000-01-23T04:56:07+00:00",
          "email": "xyz@hotmail.com",
          "is_active": false,
          "name": "john snow",
          "reseller_id": "507f191e810c19729de860ea",
          "role_name": "ResellerAdmin",
          "username": "john.doe"
        },
        "properties": {
          "agent_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "name": {
            "example": "john snow",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "role_name": {
            "example": "ResellerAdmin",
            "maxLength": 45,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "username": {
            "example": "john.doe",
            "maximum": 30,
            "minimum": 1,
            "type": "string"
          }
        },
        "required": [
          "agent_id",
          "date_created",
          "email",
          "is_active",
          "name",
          "reseller_id",
          "role_name",
          "username"
        ],
        "type": "object"
      },
      "GetAllRolesResponse": {
        "items": {
          "$ref": "#/components/schemas/GetAllRolesResponse_inner"
        },
        "minItems": 0,
        "type": "array"
      },
      "GetAllRolesResponse_inner": {
        "additionalProperties": false,
        "example": {
          "access_level": "basic",
          "description": "Has Full Authority Over Reseller",
          "name": "ResellerAdmin",
          "permission_level": 1,
          "permissions": [
            {
              "api_name": "topupBundle",
              "permission_type": "Self"
            },
            {
              "api_name": "topupBundle",
              "permission_type": "Self"
            }
          ],
          "role_id": "507f191e810c19729de860ea"
        },
        "properties": {
          "access_level": {
            "enum": [
              "basic",
              "medium",
              "sensitive"
            ],
            "example": "basic",
            "type": "string"
          },
          "description": {
            "example": "Has Full Authority Over Reseller",
            "maxLength": 2000,
            "minLength": 0,
            "pattern": "^[a-zA-Z .,']+$",
            "type": "string"
          },
          "name": {
            "example": "ResellerAdmin",
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "permission_level": {
            "format": "int32",
            "maximum": 3,
            "minimum": 1,
            "type": "integer"
          },
          "permissions": {
            "items": {
              "example": {
                "api_name": "topupBundle",
                "permission_type": "Self"
              },
              "properties": {
                "api_name": {
                  "example": "topupBundle",
                  "type": "string"
                },
                "permission_type": {
                  "example": "Self",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "role_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          }
        },
        "required": [
          "access_level",
          "name",
          "permissions",
          "role_id"
        ],
        "type": "object"
      },
      "GetAvailableResellerPropertiesResponse": {
        "additionalProperties": false,
        "example": {
          "categories": [
            "categories",
            "categories"
          ],
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetBranchResponse": {
        "additionalProperties": false,
        "example": {
          "branch_id": "507f191e810c19729de860ea",
          "branch_name": "Nakhal",
          "contact": {
            "address": "address",
            "emails": [
              "xyz@hotmail.com",
              "xyz@hotmail.com"
            ],
            "phones": [
              "phones",
              "phones"
            ],
            "website": "www.xyz.com"
          },
          "date_created": "2000-01-23",
          "developer_message": "Operation Succcessful",
          "is_active": true,
          "limit": "8.0082819E13",
          "limit_consumption": "6.0274564E14",
          "reseller_id": "507f191e810c19729de860ea",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "branch_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Branch_contact"
          },
          "date_created": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "is_active": {
            "default": true,
            "type": "boolean"
          },
          "limit": {
            "exclusiveMinimum": false,
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": -1,
            "nullable": true,
            "type": "number"
          },
          "limit_consumption": {
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": 0,
            "nullable": true,
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "required": [
          "branch_id",
          "branch_name",
          "date_created",
          "is_active",
          "reseller_id"
        ],
        "type": "object"
      },
      "GetBranchesResponse": {
        "additionalProperties": false,
        "example": {
          "branches": [
            {
              "branch_id": "507f191e810c19729de860ea",
              "branch_name": "Nakhal",
              "contact": {
                "address": "address",
                "emails": [
                  "xyz@hotmail.com",
                  "xyz@hotmail.com"
                ],
                "phones": [
                  "phones",
                  "phones"
                ],
                "website": "www.xyz.com"
              },
              "date_created": "2000-01-23",
              "developer_message": "Operation Succcessful",
              "is_active": true,
              "limit": "6.0274564E14",
              "limit_consumption": "1.46581295E14",
              "reseller_id": "507f191e810c19729de860ea",
              "response_code": "1",
              "title": "Success"
            },
            {
              "branch_id": "507f191e810c19729de860ea",
              "branch_name": "Nakhal",
              "contact": {
                "address": "address",
                "emails": [
                  "xyz@hotmail.com",
                  "xyz@hotmail.com"
                ],
                "phones": [
                  "phones",
                  "phones"
                ],
                "website": "www.xyz.com"
              },
              "date_created": "2000-01-23",
              "developer_message": "Operation Succcessful",
              "is_active": true,
              "limit": "6.0274564E14",
              "limit_consumption": "1.46581295E14",
              "reseller_id": "507f191e810c19729de860ea",
              "response_code": "1",
              "title": "Success"
            }
          ],
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success",
          "total_branches_count": 0
        },
        "properties": {
          "branches": {
            "items": {
              "$ref": "#/components/schemas/GetBranchesResponse_branches"
            },
            "type": "array"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_branches_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetBranchesResponse_branches": {
        "additionalProperties": false,
        "example": {
          "branch_id": "507f191e810c19729de860ea",
          "branch_name": "Nakhal",
          "contact": {
            "address": "address",
            "emails": [
              "xyz@hotmail.com",
              "xyz@hotmail.com"
            ],
            "phones": [
              "phones",
              "phones"
            ],
            "website": "www.xyz.com"
          },
          "date_created": "2000-01-23",
          "developer_message": "Operation Succcessful",
          "is_active": true,
          "limit": "6.0274564E14",
          "limit_consumption": "1.46581295E14",
          "reseller_id": "507f191e810c19729de860ea",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "branch_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Branch_contact"
          },
          "date_created": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "is_active": {
            "default": true,
            "type": "boolean"
          },
          "limit": {
            "exclusiveMinimum": false,
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": -1,
            "nullable": true,
            "type": "number"
          },
          "limit_consumption": {
            "format": "float",
            "maximum": 1000000000000000,
            "minimum": 0,
            "nullable": true,
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "required": [
          "branch_id",
          "branch_name",
          "date_created",
          "is_active",
          "reseller_id"
        ],
        "type": "object"
      },
      "GetBundleConsumptionResponse": {
        "additionalProperties": false,
        "example": {
          "bundle_expiry_date": "bundle_expiry_date",
          "cached_at": "cached_at",
          "data_allocated": 5000,
          "data_remaining": 5000,
          "data_unit": "MB",
          "data_used": 5000,
          "developer_message": "Operation Succcessful",
          "iccid": "iccid",
          "minutes_allocated": 5,
          "minutes_remaining": 2,
          "minutes_used": 5,
          "msisdn": "msisdn",
          "plan_status": "plan_status",
          "policy_status": "policy_status",
          "profile_expiry_date": "profile_expiry_date",
          "profile_status": "profile_status",
          "response_code": "1",
          "sms_allocated": 0,
          "sms_remaining": 1,
          "sms_used": 6,
          "status": true,
          "supports_calls_sms": true,
          "title": "Success",
          "unlimited": false
        },
        "properties": {
          "bundle_expiry_date": {
            "type": "string"
          },
          "cached_at": {
            "type": "string"
          },
          "data_allocated": {
            "example": 5000,
            "format": "float",
            "type": "number"
          },
          "data_remaining": {
            "example": 5000,
            "format": "float",
            "type": "number"
          },
          "data_unit": {
            "enum": [
              "MB",
              "GB",
              "TB"
            ],
            "example": "MB",
            "type": "string"
          },
          "data_used": {
            "example": 5000,
            "format": "float",
            "type": "number"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "minutes_allocated": {
            "format": "int32",
            "type": "integer"
          },
          "minutes_remaining": {
            "format": "int32",
            "type": "integer"
          },
          "minutes_used": {
            "format": "int32",
            "type": "integer"
          },
          "msisdn": {
            "pattern": "^\\d{3,20}$",
            "type": "string"
          },
          "plan_status": {
            "type": "string"
          },
          "policy_status": {
            "type": "string"
          },
          "profile_expiry_date": {
            "type": "string"
          },
          "profile_status": {
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "sms_allocated": {
            "format": "int32",
            "type": "integer"
          },
          "sms_remaining": {
            "format": "int32",
            "type": "integer"
          },
          "sms_used": {
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "type": "boolean"
          },
          "supports_calls_sms": {
            "type": "boolean"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "unlimited": {
            "default": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GetBundlesResponse": {
        "additionalProperties": false,
        "example": {
          "bundles": [
            {
              "additional_currency_code": "SAR",
              "bundle_category": "bundle_category",
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
              "bundle_price_final": 2.2,
              "bundle_tag": [
                "bundle_tag",
                "bundle_tag"
              ],
              "country_code": [
                "USA",
                "USA"
              ],
              "country_name": [
                "United States",
                "United States"
              ],
              "currency_code_list": [
                "USD",
                "USD"
              ],
              "data_unit": "MB",
              "exchange_rate": 1.1,
              "gprs_limit": 10,
              "is_active": true,
              "is_active_corp": true,
              "refill_group": "refill_group",
              "region_code": "AS",
              "region_name": "Asia",
              "reseller_retail_price": 20.7,
              "reseller_retail_price_in_additional_currency": 20.7,
              "service_type": "DATA",
              "sms_amount": 20,
              "subscriber_price": 16.7,
              "subscriber_price_in_additional_currency": 16.7,
              "supplier_vendor": "supplier_vendor",
              "support_topup": true,
              "supports_calls_sms": true,
              "unlimited": true,
              "validity": 30,
              "voice_amount": 20
            },
            {
              "additional_currency_code": "SAR",
              "bundle_category": "bundle_category",
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
              "bundle_price_final": 2.2,
              "bundle_tag": [
                "bundle_tag",
                "bundle_tag"
              ],
              "country_code": [
                "USA",
                "USA"
              ],
              "country_name": [
                "United States",
                "United States"
              ],
              "currency_code_list": [
                "USD",
                "USD"
              ],
              "data_unit": "MB",
              "exchange_rate": 1.1,
              "gprs_limit": 10,
              "is_active": true,
              "is_active_corp": true,
              "refill_group": "refill_group",
              "region_code": "AS",
              "region_name": "Asia",
              "reseller_retail_price": 20.7,
              "reseller_retail_price_in_additional_currency": 20.7,
              "service_type": "DATA",
              "sms_amount": 20,
              "subscriber_price": 16.7,
              "subscriber_price_in_additional_currency": 16.7,
              "supplier_vendor": "supplier_vendor",
              "support_topup": true,
              "supports_calls_sms": true,
              "unlimited": true,
              "validity": 30,
              "voice_amount": 20
            }
          ],
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success",
          "total_bundles_count": 1000
        },
        "properties": {
          "bundles": {
            "items": {
              "$ref": "#/components/schemas/GetBundlesResponse_bundles"
            },
            "type": "array"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_bundles_count": {
            "example": 1000,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetBundlesResponse_bundles": {
        "additionalProperties": false,
        "example": {
          "additional_currency_code": "SAR",
          "bundle_category": "bundle_category",
          "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
          "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
          "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
          "bundle_price_final": 2.2,
          "bundle_tag": [
            "bundle_tag",
            "bundle_tag"
          ],
          "country_code": [
            "USA",
            "USA"
          ],
          "country_name": [
            "United States",
            "United States"
          ],
          "currency_code_list": [
            "USD",
            "USD"
          ],
          "data_unit": "MB",
          "exchange_rate": 1.1,
          "gprs_limit": 10,
          "is_active": true,
          "is_active_corp": true,
          "refill_group": "refill_group",
          "region_code": "AS",
          "region_name": "Asia",
          "reseller_retail_price": 20.7,
          "reseller_retail_price_in_additional_currency": 20.7,
          "service_type": "DATA",
          "sms_amount": 20,
          "subscriber_price": 16.7,
          "subscriber_price_in_additional_currency": 16.7,
          "supplier_vendor": "supplier_vendor",
          "support_topup": true,
          "supports_calls_sms": true,
          "unlimited": true,
          "validity": 30,
          "voice_amount": 20
        },
        "properties": {
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "bundle_category": {
            "description": "Classification of the bundle",
            "type": "string"
          },
          "bundle_code": {
            "description": "A unique identifier for the bundle",
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
            "type": "string"
          },
          "bundle_price_final": {
            "description": "Bundle Price After Multiplying It By Exchange Rate",
            "example": 2.2,
            "format": "float",
            "type": "number"
          },
          "bundle_tag": {
            "description": "will exist only if value inserted by reseller",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "country_code": {
            "items": {
              "example": "USA",
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "type": "array"
          },
          "country_name": {
            "items": {
              "example": "United States",
              "type": "string"
            },
            "type": "array"
          },
          "currency_code_list": {
            "items": {
              "enum": [
                "USD"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "data_unit": {
            "description": "The unit of measurement for data.",
            "enum": [
              "MB",
              "GB",
              "TB"
            ],
            "type": "string"
          },
          "exchange_rate": {
            "description": "Exchange Rate Against Dollar",
            "example": 1.1,
            "format": "float",
            "type": "number"
          },
          "gprs_limit": {
            "description": "The maximum data usage limit.",
            "example": 10,
            "format": "float",
            "type": "number"
          },
          "is_active": {
            "description": "Indicates whether the bundle is currently active and available for purchase.",
            "type": "boolean"
          },
          "is_active_corp": {
            "type": "boolean"
          },
          "refill_group": {
            "type": "string"
          },
          "region_code": {
            "example": "AS",
            "nullable": true,
            "type": "string"
          },
          "region_name": {
            "example": "Asia",
            "nullable": true,
            "type": "string"
          },
          "reseller_retail_price": {
            "description": "The retail price set by the reseller in the primary currency.",
            "example": 20.7,
            "format": "float",
            "type": "number"
          },
          "reseller_retail_price_in_additional_currency": {
            "description": "The reseller retail price converted into the `additional_currency_code`.",
            "example": 20.7,
            "format": "float",
            "type": "number"
          },
          "service_type": {
            "enum": [
              "DATA",
              "CALL",
              "SMS",
              "CALL_SMS",
              "CALL_DATA",
              "SMS_DATA",
              "CALL_SMS_DATA"
            ],
            "type": "string"
          },
          "sms_amount": {
            "description": "Total Number of SMS the bundle has",
            "example": 20,
            "format": "int32",
            "type": "integer"
          },
          "subscriber_price": {
            "example": 16.7,
            "format": "float",
            "type": "number"
          },
          "subscriber_price_in_additional_currency": {
            "example": 16.7,
            "format": "float",
            "type": "number"
          },
          "supplier_vendor": {
            "description": "The name of the vendor or supplier providing the data package.",
            "type": "string"
          },
          "support_topup": {
            "description": "Indicates whether the package supports top-ups (additional data purchases).",
            "type": "boolean"
          },
          "supports_calls_sms": {
            "description": "Whether the bundle supports calls and SMS",
            "example": true,
            "type": "boolean"
          },
          "unlimited": {
            "description": "Indicates whether the package has unlimited data usage.",
            "type": "boolean"
          },
          "validity": {
            "description": "The validity period of the package in days.",
            "example": 30,
            "type": "integer"
          },
          "voice_amount": {
            "description": "Total number of voice minutes the bundle has",
            "example": 20,
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetCountriesResponse": {
        "additionalProperties": false,
        "example": {
          "countries": [
            {
              "country_name": "France",
              "iso2_code": "FR",
              "iso3_code": "FRA"
            },
            {
              "country_name": "France",
              "iso2_code": "FR",
              "iso3_code": "FRA"
            }
          ],
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "countries": {
            "items": {
              "$ref": "#/components/schemas/GetCountriesResponse_countries"
            },
            "type": "array"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetCountriesResponse_countries": {
        "additionalProperties": false,
        "example": {
          "country_name": "France",
          "iso2_code": "FR",
          "iso3_code": "FRA"
        },
        "properties": {
          "country_name": {
            "example": "France",
            "type": "string"
          },
          "iso2_code": {
            "example": "FR",
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "iso3_code": {
            "example": "FRA",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetCurrenciesResponse": {
        "additionalProperties": false,
        "example": {
          "currencies": [
            {
              "currency name": "Saudi Arabian Rial",
              "currency_code": "SAR",
              "currency_rate": 0.08008282,
              "is_available": true,
              "last_modified": "2000-01-23"
            },
            {
              "currency name": "Saudi Arabian Rial",
              "currency_code": "SAR",
              "currency_rate": 0.08008282,
              "is_available": true,
              "last_modified": "2000-01-23"
            }
          ],
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success",
          "total_currencies_count": 0
        },
        "properties": {
          "currencies": {
            "items": {
              "$ref": "#/components/schemas/GetCurrenciesResponse_currencies"
            },
            "type": "array"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_currencies_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetCurrenciesResponse_currencies": {
        "additionalProperties": false,
        "example": {
          "currency name": "Saudi Arabian Rial",
          "currency_code": "SAR",
          "currency_rate": 0.08008282,
          "is_available": true,
          "last_modified": "2000-01-23"
        },
        "properties": {
          "currency name": {
            "example": "Saudi Arabian Rial",
            "type": "string"
          },
          "currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "currency_rate": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "is_available": {
            "type": "boolean"
          },
          "last_modified": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetDashboardResponse": {
        "additionalProperties": false,
        "example": {
          "bundles_sold": [
            {
              "date": "date",
              "sales_number": 0
            },
            {
              "date": "date",
              "sales_number": 0
            }
          ],
          "developer_message": "Operation Succcessful",
          "gross_sales_volume_usd": 3000.5,
          "net_sales_volume_usd": 300,
          "response_code": "1",
          "title": "Success",
          "top_five_bundles": [
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
              "sales_number": 0
            },
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
              "sales_number": 0
            },
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
              "sales_number": 0
            },
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
              "sales_number": 0
            },
            {
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
              "sales_number": 0
            }
          ]
        },
        "properties": {
          "bundles_sold": {
            "items": {
              "$ref": "#/components/schemas/GetDashboardResponse_bundles_sold"
            },
            "type": "array"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "gross_sales_volume_usd": {
            "example": 3000.5,
            "format": "float",
            "type": "number"
          },
          "net_sales_volume_usd": {
            "example": 300,
            "format": "float",
            "type": "number"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "top_five_bundles": {
            "items": {
              "$ref": "#/components/schemas/GetDashboardResponse_top_five_bundles"
            },
            "maxItems": 5,
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "GetDashboardResponse_bundles_sold": {
        "additionalProperties": false,
        "example": {
          "date": "date",
          "sales_number": 0
        },
        "properties": {
          "date": {
            "pattern": "^\\d{4}-\\d{2}$",
            "type": "string"
          },
          "sales_number": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetDashboardResponse_top_five_bundles": {
        "additionalProperties": false,
        "example": {
          "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
          "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
          "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
          "sales_number": 0
        },
        "properties": {
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_  10000 GB",
            "type": "string"
          },
          "sales_number": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetIssueReportsResponse": {
        "items": {
          "$ref": "#/components/schemas/GetIssueReportsResponse_inner"
        },
        "maxItems": 1000,
        "minItems": 0,
        "type": "array"
      },
      "GetIssueReportsResponse_inner": {
        "additionalProperties": false,
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "issues": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "added_by": {
                  "example": "507f191e810c19729de860ea",
                  "format": "hex",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "type": "string"
                },
                "assignee": {
                  "example": "SimWeGo Support",
                  "maxLength": 20,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z ']+$",
                  "type": "string"
                },
                "branch_id": {
                  "example": "507f191e810c19729de860ea",
                  "format": "hex",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "type": "string"
                },
                "chat": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "added_by": {
                        "example": "507f191e810c19729de860ea",
                        "format": "hex",
                        "maxLength": 24,
                        "minLength": 24,
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                      },
                      "added_by_name": {
                        "example": "John Wick",
                        "maxLength": 20,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z ']+$",
                        "type": "string"
                      },
                      "added_by_type": {
                        "readOnly": true,
                        "type": "string"
                      },
                      "attachement": {
                        "description": "Attachement Url",
                        "type": "string"
                      },
                      "date_created": {
                        "format": "date",
                        "readOnly": true,
                        "type": "string"
                      },
                      "file_size": {
                        "description": "in kiloBytes",
                        "example": 16.7,
                        "format": "float",
                        "type": "number"
                      },
                      "message": {
                        "description": "Detailed description of the issue or concern.",
                        "maxLength": 10000,
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "date_created": {
                  "format": "date",
                  "readOnly": true,
                  "type": "string"
                },
                "feedback": {
                  "additionalProperties": false,
                  "properties": {
                    "comments": {
                      "description": "Additional comments on the resolution process.",
                      "type": "string"
                    },
                    "satisfaction": {
                      "description": "User satisfaction rating (e.g., 1-5, with 5 being the highest).",
                      "example": 4,
                      "maximum": 5,
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "satisfaction"
                  ],
                  "type": "object"
                },
                "issue_description": {
                  "description": "Detailed description of the issue or concern.",
                  "maxLength": 10000,
                  "type": "string"
                },
                "issue_subject": {
                  "description": "Summary of Issue",
                  "maxLength": 500,
                  "type": "string"
                },
                "issue_type": {
                  "description": "Type of the issue (e.g., \"Technical Issue\" or \"Price-related Concern\").",
                  "enum": [
                    "Technical Issue",
                    "Price-related Concern"
                  ],
                  "type": "string"
                },
                "last_modified": {
                  "format": "date",
                  "readOnly": true,
                  "type": "string"
                },
                "priority": {
                  "default": 3,
                  "description": "Priority level of the issue (\"Critical :1\", \"High:2\", \"Medium:3\", or \"Low:4\").",
                  "maximum": 4,
                  "minimum": 1,
                  "type": "integer"
                },
                "report_id": {
                  "example": "507f191e810c19729de860ea",
                  "format": "hex",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "type": "string"
                },
                "requester": {
                  "example": "John Wick",
                  "maxLength": 20,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z ']+$",
                  "type": "string"
                },
                "reseller_id": {
                  "example": "507f191e810c19729de860ea",
                  "format": "hex",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "type": "string"
                },
                "resolution": {
                  "description": "Final resolution before closing the issue.",
                  "maxLength": 10000,
                  "type": "string"
                },
                "status": {
                  "enum": [
                    "Open",
                    "Closed",
                    "Under Review"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_issues_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetMyBundleConsumptionResponse": {
        "additionalProperties": false,
        "example": {
          "bundle_expiry_date": "bundle_expiry_date",
          "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
          "cached_at": "cached_at",
          "data_allocated": 5000,
          "data_remaining": 5000,
          "data_unit": "MB",
          "data_used": 5000,
          "developer_message": "Operation Succcessful",
          "iccid": "iccid",
          "logo_uri": "logo_uri",
          "minutes_allocated": 5,
          "minutes_remaining": 2,
          "minutes_used": 5,
          "msisdn": "msisdn",
          "plan_status": "plan_status",
          "policy_status": "policy_status",
          "profile_expiry_date": "profile_expiry_date",
          "profile_status": "profile_status",
          "response_code": "1",
          "sms_allocated": 0,
          "sms_remaining": 1,
          "sms_used": 6,
          "status": true,
          "supports_calls_sms": true,
          "title": "Success",
          "unlimited": false
        },
        "properties": {
          "bundle_expiry_date": {
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "type": "string"
          },
          "cached_at": {
            "type": "string"
          },
          "data_allocated": {
            "example": 5000,
            "format": "float",
            "type": "number"
          },
          "data_remaining": {
            "example": 5000,
            "format": "float",
            "type": "number"
          },
          "data_unit": {
            "enum": [
              "MB",
              "GB",
              "TB"
            ],
            "example": "MB",
            "type": "string"
          },
          "data_used": {
            "example": 5000,
            "format": "float",
            "type": "number"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "logo_uri": {
            "type": "string"
          },
          "minutes_allocated": {
            "format": "int32",
            "type": "integer"
          },
          "minutes_remaining": {
            "format": "int32",
            "type": "integer"
          },
          "minutes_used": {
            "format": "int32",
            "type": "integer"
          },
          "msisdn": {
            "pattern": "^\\d{3,20}$",
            "type": "string"
          },
          "plan_status": {
            "type": "string"
          },
          "policy_status": {
            "type": "string"
          },
          "profile_expiry_date": {
            "type": "string"
          },
          "profile_status": {
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "sms_allocated": {
            "format": "int32",
            "type": "integer"
          },
          "sms_remaining": {
            "format": "int32",
            "type": "integer"
          },
          "sms_used": {
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "type": "boolean"
          },
          "supports_calls_sms": {
            "type": "boolean"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "unlimited": {
            "default": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GetOrderHistoryFailedResponse": {
        "additionalProperties": false,
        "properties": {
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 14,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "bundle_category": {
            "enum": [
              "country",
              "global",
              "region",
              "cruise"
            ],
            "type": "string"
          },
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "type": "string"
          },
          "bundle_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_price_final": {
            "description": "Bundle Price After Multiplying It By Exchange Rate",
            "example": 2.2,
            "format": "float",
            "type": "number"
          },
          "bundle_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "client_email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "country_code": {
            "items": {
              "example": "USA",
              "maxLength": 4,
              "minLength": 3,
              "type": "string"
            },
            "type": "array"
          },
          "country_name": {
            "items": {
              "example": "United States",
              "type": "string"
            },
            "type": "array"
          },
          "currency_code": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "exchange_rate": {
            "description": "Exchange Rate Against Dollar",
            "example": 1.1,
            "format": "float",
            "type": "number"
          },
          "has_related_active_topups": {
            "type": "boolean"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_reference": {
            "maxLength": 30,
            "type": "string"
          },
          "order_status": {
            "type": "string"
          },
          "order_type": {
            "example": "BuyBundle",
            "type": "string"
          },
          "otp": {
            "format": "uuid",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "topup_an_expired_plan": {
            "type": "boolean"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetOrderHistoryResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "orders": [
            "",
            ""
          ],
          "response_code": "1",
          "title": "Success",
          "total_orders_count": 0
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "orders": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GetOrderHistorySuccessfulResponse"
                },
                {
                  "$ref": "#/components/schemas/GetOrderHistoryFailedResponse"
                }
              ]
            },
            "type": "array"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_orders_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetOrderHistorySuccessfulResponse": {
        "additionalProperties": false,
        "properties": {
          "activation_code": {
            "description": "Data for qr code value",
            "type": "string"
          },
          "additional_currency_code": {
            "description": "Currency code updated by reseller",
            "example": "SAR",
            "maxLength": 14,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "bundle_category": {
            "enum": [
              "country",
              "global",
              "region",
              "cruise"
            ],
            "type": "string"
          },
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_expiry_date": {
            "description": "Expiration date for the bundle",
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "type": "string"
          },
          "bundle_price": {
            "description": "Price in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_price_final": {
            "description": "Bundle Price After Multiplying It By Exchange Rate",
            "example": 2.2,
            "format": "float",
            "type": "number"
          },
          "bundle_price_in_additional_currency": {
            "description": "Price in currency code updated by reseller",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price": {
            "description": "Price in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price_in_additional_currency": {
            "description": "Price in currency code updated by reseller",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "client_email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "country_code": {
            "items": {
              "example": "USA",
              "maxLength": 4,
              "minLength": 3,
              "type": "string"
            },
            "type": "array"
          },
          "country_name": {
            "items": {
              "example": "United States",
              "type": "string"
            },
            "type": "array"
          },
          "currency_code": {
            "description": "By default it is dollars",
            "type": "string"
          },
          "date_created": {
            "description": "Creation date for the order",
            "format": "date-time",
            "type": "string"
          },
          "exchange_rate": {
            "description": "Exchange Rate Against Dollar",
            "example": 1.1,
            "format": "float",
            "type": "number"
          },
          "expiry_date": {
            "description": "Expiration date for the bundle",
            "format": "date-time",
            "type": "string"
          },
          "has_related_active_topups": {
            "description": "If order type is BuyBundle and the order has related topup(s)",
            "type": "boolean"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "matching_id": {
            "description": "Data for qr code value",
            "type": "string"
          },
          "msisdn": {
            "pattern": "^\\d{3,20}$",
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_reference": {
            "description": "Order reference number",
            "maxLength": 30,
            "type": "string"
          },
          "order_status": {
            "enum": [
              "Successful",
              "Refunded"
            ],
            "type": "string"
          },
          "order_type": {
            "description": "To specify bundle or topup",
            "example": "BuyBundle",
            "type": "string"
          },
          "otp": {
            "description": "Order reference number",
            "format": "uuid",
            "type": "string"
          },
          "plan_started": {
            "description": "Only if plan started",
            "type": "boolean"
          },
          "plan_status": {
            "description": "It could be Pending, Active or Expired",
            "type": "string"
          },
          "plan_uid": {
            "description": "Plan uid related to profiles",
            "example": "6380d4efa3fb4",
            "type": "string"
          },
          "profile_expiry_date": {
            "description": "Expiration date for the profile",
            "type": "string"
          },
          "refund_reason": {
            "description": "Refund reason in case refund occured",
            "example": "User Did not have good coverage.",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "Remaining wallet for reseller in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "Remaining wallet for reseller in updated currency",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "smdp_address": {
            "description": "Data for qr code value",
            "type": "string"
          },
          "topup_an_expired_plan": {
            "description": "If topup a plan that have plan_status = Expired",
            "type": "boolean"
          },
          "whatsapp_number": {
            "description": "Whatsapp number for the client",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetPlanHistoryFailedResponse": {
        "additionalProperties": false,
        "properties": {
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 14,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "bundle_category": {
            "enum": [
              "country",
              "global",
              "region",
              "cruise"
            ],
            "type": "string"
          },
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "type": "string"
          },
          "bundle_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "client_email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "country_code": {
            "items": {
              "example": "USA",
              "maxLength": 4,
              "minLength": 3,
              "type": "string"
            },
            "type": "array"
          },
          "country_name": {
            "items": {
              "example": "United States",
              "type": "string"
            },
            "type": "array"
          },
          "currency_code": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "has_related_active_topups": {
            "type": "boolean"
          },
          "has_related_order": {
            "type": "boolean"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_reference": {
            "maxLength": 30,
            "type": "string"
          },
          "order_status": {
            "type": "string"
          },
          "order_type": {
            "example": "BuyBundle",
            "type": "string"
          },
          "otp": {
            "format": "uuid",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "topup_an_expired_plan": {
            "type": "boolean"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetPlanHistoryResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "orders": [
            "",
            ""
          ],
          "response_code": "1",
          "title": "Success",
          "total_orders_count": 0
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "orders": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GetPlanHistorySuccessfulResponse"
                },
                {
                  "$ref": "#/components/schemas/GetPlanHistoryFailedResponse"
                }
              ]
            },
            "type": "array"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_orders_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetPlanHistorySuccessfulResponse": {
        "additionalProperties": false,
        "properties": {
          "activation_code": {
            "type": "string"
          },
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 14,
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "bundle_category": {
            "enum": [
              "country",
              "global",
              "region",
              "cruise"
            ],
            "type": "string"
          },
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_duration": {
            "type": "integer"
          },
          "bundle_expiry_date": {
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "type": "string"
          },
          "bundle_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price_in_additional_currency": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "client_email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "country_code": {
            "items": {
              "example": "USA",
              "maxLength": 4,
              "minLength": 3,
              "type": "string"
            },
            "type": "array"
          },
          "country_name": {
            "items": {
              "example": "United States",
              "type": "string"
            },
            "type": "array"
          },
          "currency_code": {
            "type": "string"
          },
          "data_amount": {
            "format": "float",
            "type": "number"
          },
          "data_unit": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "expiry_date": {
            "format": "date-time",
            "type": "string"
          },
          "has_related_active_topups": {
            "type": "boolean"
          },
          "has_related_order": {
            "type": "boolean"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "matching_id": {
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_reference": {
            "maxLength": 30,
            "type": "string"
          },
          "order_status": {
            "enum": [
              "Successful",
              "Refunded"
            ],
            "type": "string"
          },
          "order_type": {
            "example": "BuyBundle",
            "type": "string"
          },
          "otp": {
            "format": "uuid",
            "type": "string"
          },
          "plan_started": {
            "type": "boolean"
          },
          "plan_status": {
            "type": "string"
          },
          "plan_uid": {
            "example": "6380d4efa3fb4",
            "type": "string"
          },
          "profile_expiry_date": {
            "type": "string"
          },
          "refund_reason": {
            "example": "User Did not have good coverage.",
            "type": "string"
          },
          "region_code": {
            "type": "string"
          },
          "region_name": {
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "in additional",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "retail_price": {
            "format": "float",
            "type": "number"
          },
          "smdp_address": {
            "type": "string"
          },
          "topup_an_expired_plan": {
            "type": "boolean"
          },
          "validity_amount": {
            "type": "string"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetPromoDashboardResponse": {
        "additionalProperties": false,
        "example": {
          "sales_per_day": [
            {
              "bundles_sold": 2,
              "commission_amount": 0.522,
              "date": "2023-04-27",
              "total_sales_volume": 5.22
            },
            {
              "bundles_sold": 2,
              "commission_amount": 0.522,
              "date": "2023-04-27",
              "total_sales_volume": 5.22
            }
          ]
        },
        "properties": {
          "sales_per_day": {
            "items": {
              "$ref": "#/components/schemas/GetPromoDashboardResponse_sales_per_day"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetPromoDashboardResponse_sales_per_day": {
        "additionalProperties": false,
        "example": {
          "bundles_sold": 2,
          "commission_amount": 0.522,
          "date": "2023-04-27",
          "total_sales_volume": 5.22
        },
        "properties": {
          "bundles_sold": {
            "example": 2,
            "minimum": 0,
            "type": "integer"
          },
          "commission_amount": {
            "example": 0.522,
            "format": "float",
            "type": "number"
          },
          "date": {
            "example": "2023-04-27",
            "type": "string"
          },
          "total_sales_volume": {
            "example": 5.22,
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "GetPromocodeHistoryResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "orders": [
            {
              "activation_code": "activation_code",
              "affiliate_marketing_message": "affiliate_marketing_message",
              "affiliate_program": true,
              "branch_id": "507f191e810c19729de860ea",
              "bundle_category": "country",
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
              "bundle_price": 12,
              "bundle_retail_price": 12,
              "client_email": "xyz@hotmail.com",
              "client_name": "client_name",
              "commision_amount": 1.4658129,
              "commission_rate": 60.274563,
              "country_code": [
                "USA",
                "USA"
              ],
              "country_name": [
                "United States",
                "United States"
              ],
              "date_created": "2000-01-23T04:56:07+00:00",
              "iccid": "iccid",
              "matching_id": "matching_id",
              "order_id": "507f191e810c19729de860ea",
              "order_status": "Successful",
              "plan_status": "plan_status",
              "plan_uid": "6380d4efa3fb4",
              "promocode": "SIMWEGO2024",
              "refund_reason": "User Did not have good coverage.",
              "remaining_wallet_balance": 1000,
              "reseller_id": "507f191e810c19729de860ea",
              "smdp_address": "smdp_address"
            },
            {
              "activation_code": "activation_code",
              "affiliate_marketing_message": "affiliate_marketing_message",
              "affiliate_program": true,
              "branch_id": "507f191e810c19729de860ea",
              "bundle_category": "country",
              "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
              "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
              "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
              "bundle_price": 12,
              "bundle_retail_price": 12,
              "client_email": "xyz@hotmail.com",
              "client_name": "client_name",
              "commision_amount": 1.4658129,
              "commission_rate": 60.274563,
              "country_code": [
                "USA",
                "USA"
              ],
              "country_name": [
                "United States",
                "United States"
              ],
              "date_created": "2000-01-23T04:56:07+00:00",
              "iccid": "iccid",
              "matching_id": "matching_id",
              "order_id": "507f191e810c19729de860ea",
              "order_status": "Successful",
              "plan_status": "plan_status",
              "plan_uid": "6380d4efa3fb4",
              "promocode": "SIMWEGO2024",
              "refund_reason": "User Did not have good coverage.",
              "remaining_wallet_balance": 1000,
              "reseller_id": "507f191e810c19729de860ea",
              "smdp_address": "smdp_address"
            }
          ],
          "response_code": "1",
          "title": "Success",
          "total_orders_count": 0
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "orders": {
            "items": {
              "$ref": "#/components/schemas/GetPromocodeHistoryResponse_orders"
            },
            "type": "array"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_orders_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetPromocodeHistoryResponse_orders": {
        "additionalProperties": false,
        "example": {
          "activation_code": "activation_code",
          "affiliate_marketing_message": "affiliate_marketing_message",
          "affiliate_program": true,
          "branch_id": "507f191e810c19729de860ea",
          "bundle_category": "country",
          "bundle_code": "esim_10gb_30days_unitedstates__0905202216214562",
          "bundle_marketing_name": "eSIM, 10GB, 30 Days, United States, Unthrottled",
          "bundle_name": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
          "bundle_price": 12,
          "bundle_retail_price": 12,
          "client_email": "xyz@hotmail.com",
          "client_name": "client_name",
          "commision_amount": 1.4658129,
          "commission_rate": 60.274563,
          "country_code": [
            "USA",
            "USA"
          ],
          "country_name": [
            "United States",
            "United States"
          ],
          "date_created": "2000-01-23T04:56:07+00:00",
          "iccid": "iccid",
          "matching_id": "matching_id",
          "order_id": "507f191e810c19729de860ea",
          "order_status": "Successful",
          "plan_status": "plan_status",
          "plan_uid": "6380d4efa3fb4",
          "promocode": "SIMWEGO2024",
          "refund_reason": "User Did not have good coverage.",
          "remaining_wallet_balance": 1000,
          "reseller_id": "507f191e810c19729de860ea",
          "smdp_address": "smdp_address"
        },
        "properties": {
          "activation_code": {
            "type": "string"
          },
          "affiliate_marketing_message": {
            "maxLength": 1000,
            "type": "string"
          },
          "affiliate_program": {
            "type": "boolean"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "bundle_category": {
            "enum": [
              "country",
              "global",
              "region",
              "cruise"
            ],
            "type": "string"
          },
          "bundle_code": {
            "example": "esim_10gb_30days_unitedstates__0905202216214562",
            "type": "string"
          },
          "bundle_marketing_name": {
            "example": "eSIM, 10GB, 30 Days, United States, Unthrottled",
            "type": "string"
          },
          "bundle_name": {
            "example": "eSIM_ 10GB_ 30 Days_ United States_ Unthrottled",
            "type": "string"
          },
          "bundle_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "bundle_retail_price": {
            "description": "in dollars",
            "example": 12,
            "format": "float",
            "type": "number"
          },
          "client_email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "client_name": {
            "type": "string"
          },
          "commision_amount": {
            "format": "float",
            "type": "number"
          },
          "commission_rate": {
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "country_code": {
            "items": {
              "example": "USA",
              "maxLength": 4,
              "minLength": 3,
              "type": "string"
            },
            "type": "array"
          },
          "country_name": {
            "items": {
              "example": "United States",
              "type": "string"
            },
            "type": "array"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "matching_id": {
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_status": {
            "enum": [
              "Successful",
              "Refunded"
            ],
            "type": "string"
          },
          "plan_status": {
            "type": "string"
          },
          "plan_uid": {
            "example": "6380d4efa3fb4",
            "type": "string"
          },
          "promocode": {
            "example": "SIMWEGO2024",
            "type": "string"
          },
          "refund_reason": {
            "example": "User Did not have good coverage.",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "smdp_address": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetRegionsResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "regions": [
            {
              "region_code": "FRA",
              "region_name": "France"
            },
            {
              "region_code": "FRA",
              "region_name": "France"
            }
          ],
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "regions": {
            "items": {
              "$ref": "#/components/schemas/GetRegionsResponse_regions"
            },
            "type": "array"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetRegionsResponse_regions": {
        "additionalProperties": false,
        "example": {
          "region_code": "FRA",
          "region_name": "France"
        },
        "properties": {
          "region_code": {
            "example": "FRA",
            "type": "string"
          },
          "region_name": {
            "example": "France",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetResellerResponse": {
        "additionalProperties": false,
        "example": {
          "active_vendors_list": [
            "active_vendors_list",
            "active_vendors_list"
          ],
          "additional_currency_code": "SAR",
          "balance": 0.08008282,
          "balance_in_additional_currency": 0.6027456,
          "balance_warning_limit": 1000,
          "callback_url": "www.xyz.com",
          "contact": {
            "address": "address",
            "emails": [
              "xyz@hotmail.com",
              "xyz@hotmail.com"
            ],
            "phones": [
              "phones",
              "phones"
            ],
            "website": "www.xyz.com"
          },
          "corp_rate_revenue": 12,
          "credit_limit": 0.14658129,
          "credit_limit_in_additional_currency": 0.5637377,
          "credit_warning_limit": 59.621338,
          "currency_code": "USD",
          "custom_email_template_data": "",
          "custom_email_template_expired": "",
          "custom_email_template_qr": "",
          "data_consumption_email": {
            "body_1": "body_1",
            "body_2": "body_2",
            "company_name_team": "company_name_team",
            "email-image_type": "email-image_type",
            "email-logo_type": "email-logo_type",
            "email_image_consumption": "email_image_consumption",
            "email_logo": "email_logo",
            "facebook_link": "facebook_link",
            "footer": "footer",
            "greetings": "greetings",
            "instagram_link": "instagram_link",
            "subject_consumption": "subject_consumption",
            "website_link": "website_link",
            "whatsapp_number": "whatsapp_number"
          },
          "data_expired_email": {
            "body_1": "body_1",
            "body_2": "body_2",
            "company_name_team": "company_name_team",
            "email-image_type": "email-image_type",
            "email-logo_type": "email-logo_type",
            "email_image_expired": "email_image_expired",
            "email_logo": "email_logo",
            "facebook_link": "facebook_link",
            "footer": "footer",
            "greetings": "greetings",
            "instagram_link": "instagram_link",
            "subject_expired": "subject_expired",
            "website_link": "website_link",
            "whatsapp_number": "whatsapp_number"
          },
          "date_created": "2000-01-23",
          "default_currency_code": "USD",
          "developer_message": "Operation Succcessful",
          "email_settings": {
            "password": "password",
            "smtp_port": "smtp_port",
            "smtp_server": "smtp_server",
            "username": "xyz@hotmail.com"
          },
          "image": "",
          "image_type": "image_type",
          "is_active": false,
          "is_whitelabel": false,
          "notification_type": "notification_type",
          "qr_code_email": {
            "activation_code": "activation_code",
            "android_users": "android_users",
            "body_1": "body_1",
            "body_2": "body_2",
            "bundle_consumption_link": "bundle_consumption_link",
            "bundle_consumption_sentence": "bundle_consumption_sentence",
            "company_name_team": "company_name_team",
            "data_bundle_details": "data_bundle_details",
            "email-image_type": "email-image_type",
            "email-logo_type": "email-logo_type",
            "email_image_qrcode": "email_image_qrcode",
            "email_logo": "email_logo",
            "facebook_link": "facebook_link",
            "footer": "footer",
            "greetings": "greetings",
            "instagram_link": "instagram_link",
            "instructions_link": "instructions_link",
            "invoice_details": "invoice_details",
            "ios_users": "ios_users",
            "matching_id": "matching_id",
            "smdp_address": "smdp_address",
            "subject_qrcode": "subject_qrcode",
            "topup_link": "topup_link",
            "topup_sentence": "topup_sentence",
            "website_link": "website_link",
            "whatsapp_number": "whatsapp_number"
          },
          "rate_revenue": 12,
          "request_custom_email": true,
          "reseller_category": "reseller_category",
          "reseller_id": "507f191e810c19729de860ea",
          "reseller_name": "Nakhal",
          "reseller_type": "prepaid",
          "response_code": "1",
          "support_topup": false,
          "supports_multibranches": false,
          "supports_promo": true,
          "supports_vouchers": true,
          "tenant_name": "tenant_name",
          "title": "Success",
          "vendors_for_balance_deduction_list": [
            "vendors_for_balance_deduction_list",
            "vendors_for_balance_deduction_list"
          ],
          "voucher_rate": 12
        },
        "properties": {
          "active_vendors_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "balance": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "balance_in_additional_currency": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "balance_warning_limit": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "callback_url": {
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Reseller_contact"
          },
          "corp_rate_revenue": {
            "description": "corporate revenue in percent",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": 0,
            "type": "number"
          },
          "credit_limit": {
            "default": 0,
            "description": "postpaid limit",
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "credit_limit_in_additional_currency": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "credit_warning_limit": {
            "default": 0,
            "description": "credit warning limit in percentage",
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "currency_code": {
            "default": "USD",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "custom_email_template_data": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_expired": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_qr": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "data_consumption_email": {
            "$ref": "#/components/schemas/Reseller_data_consumption_email"
          },
          "data_expired_email": {
            "$ref": "#/components/schemas/Reseller_data_expired_email"
          },
          "date_created": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "default_currency_code": {
            "default": "USD",
            "maxLength": 15,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "email_settings": {
            "$ref": "#/components/schemas/Reseller_email_settings"
          },
          "image": {
            "description": "The image file of the user",
            "format": "binary",
            "type": "string"
          },
          "image_type": {
            "type": "string"
          },
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "is_whitelabel": {
            "default": false,
            "type": "boolean"
          },
          "notification_type": {
            "type": "string"
          },
          "qr_code_email": {
            "$ref": "#/components/schemas/Reseller_qr_code_email"
          },
          "rate_revenue": {
            "default": 0,
            "description": "rate revenue in percent",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": 0,
            "type": "number"
          },
          "request_custom_email": {
            "default": true,
            "type": "boolean"
          },
          "reseller_category": {
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "reseller_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_type": {
            "default": "prepaid",
            "enum": [
              "prepaid",
              "postpaid"
            ],
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "support_topup": {
            "default": false,
            "type": "boolean"
          },
          "supports_multibranches": {
            "default": false,
            "type": "boolean"
          },
          "supports_promo": {
            "type": "boolean"
          },
          "supports_vouchers": {
            "type": "boolean"
          },
          "tenant_name": {
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "vendors_for_balance_deduction_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "voucher_rate": {
            "example": 12,
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "balance",
          "contact",
          "currency_code",
          "date_created",
          "is_active",
          "reseller_id",
          "reseller_name",
          "reseller_type",
          "support_topup"
        ],
        "type": "object"
      },
      "GetResellersResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "resellers": [
            {
              "active_vendors_list": [
                "active_vendors_list",
                "active_vendors_list"
              ],
              "additional_currency_code": "SAR",
              "balance": 0.08008282,
              "balance_in_additional_currency": 0.6027456,
              "balance_warning_limit": 1000,
              "callback_url": "www.xyz.com",
              "contact": {
                "address": "address",
                "emails": [
                  "xyz@hotmail.com",
                  "xyz@hotmail.com"
                ],
                "phones": [
                  "phones",
                  "phones"
                ],
                "website": "www.xyz.com"
              },
              "corp_rate_revenue": 12,
              "credit_limit": 0.14658129,
              "credit_limit_in_additional_currency": 0.5637377,
              "credit_warning_limit": 59.621338,
              "currency_code": "USD",
              "custom_email_template_data": "",
              "custom_email_template_expired": "",
              "custom_email_template_qr": "",
              "data_consumption_email": {
                "body_1": "body_1",
                "body_2": "body_2",
                "company_name_team": "company_name_team",
                "email-image_type": "email-image_type",
                "email-logo_type": "email-logo_type",
                "email_image_consumption": "email_image_consumption",
                "email_logo": "email_logo",
                "facebook_link": "facebook_link",
                "footer": "footer",
                "greetings": "greetings",
                "instagram_link": "instagram_link",
                "subject_consumption": "subject_consumption",
                "website_link": "website_link",
                "whatsapp_number": "whatsapp_number"
              },
              "data_expired_email": {
                "body_1": "body_1",
                "body_2": "body_2",
                "company_name_team": "company_name_team",
                "email-image_type": "email-image_type",
                "email-logo_type": "email-logo_type",
                "email_image_expired": "email_image_expired",
                "email_logo": "email_logo",
                "facebook_link": "facebook_link",
                "footer": "footer",
                "greetings": "greetings",
                "instagram_link": "instagram_link",
                "subject_expired": "subject_expired",
                "website_link": "website_link",
                "whatsapp_number": "whatsapp_number"
              },
              "date_created": "2000-01-23",
              "default_currency_code": "USD",
              "developer_message": "Operation Succcessful",
              "email_settings": {
                "password": "password",
                "smtp_port": "smtp_port",
                "smtp_server": "smtp_server",
                "username": "xyz@hotmail.com"
              },
              "image": "",
              "image_type": "image_type",
              "is_active": false,
              "is_whitelabel": false,
              "notification_type": "notification_type",
              "qr_code_email": {
                "activation_code": "activation_code",
                "android_users": "android_users",
                "body_1": "body_1",
                "body_2": "body_2",
                "bundle_consumption_link": "bundle_consumption_link",
                "bundle_consumption_sentence": "bundle_consumption_sentence",
                "company_name_team": "company_name_team",
                "data_bundle_details": "data_bundle_details",
                "email-image_type": "email-image_type",
                "email-logo_type": "email-logo_type",
                "email_image_qrcode": "email_image_qrcode",
                "email_logo": "email_logo",
                "facebook_link": "facebook_link",
                "footer": "footer",
                "greetings": "greetings",
                "instagram_link": "instagram_link",
                "instructions_link": "instructions_link",
                "invoice_details": "invoice_details",
                "ios_users": "ios_users",
                "matching_id": "matching_id",
                "smdp_address": "smdp_address",
                "subject_qrcode": "subject_qrcode",
                "topup_link": "topup_link",
                "topup_sentence": "topup_sentence",
                "website_link": "website_link",
                "whatsapp_number": "whatsapp_number"
              },
              "rate_revenue": 12,
              "request_custom_email": true,
              "reseller_category": "reseller_category",
              "reseller_id": "507f191e810c19729de860ea",
              "reseller_name": "Nakhal",
              "reseller_type": "prepaid",
              "response_code": "1",
              "support_topup": false,
              "supports_multibranches": false,
              "supports_promo": true,
              "supports_vouchers": true,
              "tenant_name": "tenant_name",
              "title": "Success",
              "vendors_for_balance_deduction_list": [
                "vendors_for_balance_deduction_list",
                "vendors_for_balance_deduction_list"
              ],
              "voucher_rate": 12
            },
            {
              "active_vendors_list": [
                "active_vendors_list",
                "active_vendors_list"
              ],
              "additional_currency_code": "SAR",
              "balance": 0.08008282,
              "balance_in_additional_currency": 0.6027456,
              "balance_warning_limit": 1000,
              "callback_url": "www.xyz.com",
              "contact": {
                "address": "address",
                "emails": [
                  "xyz@hotmail.com",
                  "xyz@hotmail.com"
                ],
                "phones": [
                  "phones",
                  "phones"
                ],
                "website": "www.xyz.com"
              },
              "corp_rate_revenue": 12,
              "credit_limit": 0.14658129,
              "credit_limit_in_additional_currency": 0.5637377,
              "credit_warning_limit": 59.621338,
              "currency_code": "USD",
              "custom_email_template_data": "",
              "custom_email_template_expired": "",
              "custom_email_template_qr": "",
              "data_consumption_email": {
                "body_1": "body_1",
                "body_2": "body_2",
                "company_name_team": "company_name_team",
                "email-image_type": "email-image_type",
                "email-logo_type": "email-logo_type",
                "email_image_consumption": "email_image_consumption",
                "email_logo": "email_logo",
                "facebook_link": "facebook_link",
                "footer": "footer",
                "greetings": "greetings",
                "instagram_link": "instagram_link",
                "subject_consumption": "subject_consumption",
                "website_link": "website_link",
                "whatsapp_number": "whatsapp_number"
              },
              "data_expired_email": {
                "body_1": "body_1",
                "body_2": "body_2",
                "company_name_team": "company_name_team",
                "email-image_type": "email-image_type",
                "email-logo_type": "email-logo_type",
                "email_image_expired": "email_image_expired",
                "email_logo": "email_logo",
                "facebook_link": "facebook_link",
                "footer": "footer",
                "greetings": "greetings",
                "instagram_link": "instagram_link",
                "subject_expired": "subject_expired",
                "website_link": "website_link",
                "whatsapp_number": "whatsapp_number"
              },
              "date_created": "2000-01-23",
              "default_currency_code": "USD",
              "developer_message": "Operation Succcessful",
              "email_settings": {
                "password": "password",
                "smtp_port": "smtp_port",
                "smtp_server": "smtp_server",
                "username": "xyz@hotmail.com"
              },
              "image": "",
              "image_type": "image_type",
              "is_active": false,
              "is_whitelabel": false,
              "notification_type": "notification_type",
              "qr_code_email": {
                "activation_code": "activation_code",
                "android_users": "android_users",
                "body_1": "body_1",
                "body_2": "body_2",
                "bundle_consumption_link": "bundle_consumption_link",
                "bundle_consumption_sentence": "bundle_consumption_sentence",
                "company_name_team": "company_name_team",
                "data_bundle_details": "data_bundle_details",
                "email-image_type": "email-image_type",
                "email-logo_type": "email-logo_type",
                "email_image_qrcode": "email_image_qrcode",
                "email_logo": "email_logo",
                "facebook_link": "facebook_link",
                "footer": "footer",
                "greetings": "greetings",
                "instagram_link": "instagram_link",
                "instructions_link": "instructions_link",
                "invoice_details": "invoice_details",
                "ios_users": "ios_users",
                "matching_id": "matching_id",
                "smdp_address": "smdp_address",
                "subject_qrcode": "subject_qrcode",
                "topup_link": "topup_link",
                "topup_sentence": "topup_sentence",
                "website_link": "website_link",
                "whatsapp_number": "whatsapp_number"
              },
              "rate_revenue": 12,
              "request_custom_email": true,
              "reseller_category": "reseller_category",
              "reseller_id": "507f191e810c19729de860ea",
              "reseller_name": "Nakhal",
              "reseller_type": "prepaid",
              "response_code": "1",
              "support_topup": false,
              "supports_multibranches": false,
              "supports_promo": true,
              "supports_vouchers": true,
              "tenant_name": "tenant_name",
              "title": "Success",
              "vendors_for_balance_deduction_list": [
                "vendors_for_balance_deduction_list",
                "vendors_for_balance_deduction_list"
              ],
              "voucher_rate": 12
            }
          ],
          "response_code": "1",
          "title": "Success",
          "total_resellers_count": 0
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "resellers": {
            "items": {
              "$ref": "#/components/schemas/GetResellersResponse_resellers"
            },
            "type": "array"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_resellers_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetResellersResponse_resellers": {
        "additionalProperties": false,
        "example": {
          "active_vendors_list": [
            "active_vendors_list",
            "active_vendors_list"
          ],
          "additional_currency_code": "SAR",
          "balance": 0.08008282,
          "balance_in_additional_currency": 0.6027456,
          "balance_warning_limit": 1000,
          "callback_url": "www.xyz.com",
          "contact": {
            "address": "address",
            "emails": [
              "xyz@hotmail.com",
              "xyz@hotmail.com"
            ],
            "phones": [
              "phones",
              "phones"
            ],
            "website": "www.xyz.com"
          },
          "corp_rate_revenue": 12,
          "credit_limit": 0.14658129,
          "credit_limit_in_additional_currency": 0.5637377,
          "credit_warning_limit": 59.621338,
          "currency_code": "USD",
          "custom_email_template_data": "",
          "custom_email_template_expired": "",
          "custom_email_template_qr": "",
          "data_consumption_email": {
            "body_1": "body_1",
            "body_2": "body_2",
            "company_name_team": "company_name_team",
            "email-image_type": "email-image_type",
            "email-logo_type": "email-logo_type",
            "email_image_consumption": "email_image_consumption",
            "email_logo": "email_logo",
            "facebook_link": "facebook_link",
            "footer": "footer",
            "greetings": "greetings",
            "instagram_link": "instagram_link",
            "subject_consumption": "subject_consumption",
            "website_link": "website_link",
            "whatsapp_number": "whatsapp_number"
          },
          "data_expired_email": {
            "body_1": "body_1",
            "body_2": "body_2",
            "company_name_team": "company_name_team",
            "email-image_type": "email-image_type",
            "email-logo_type": "email-logo_type",
            "email_image_expired": "email_image_expired",
            "email_logo": "email_logo",
            "facebook_link": "facebook_link",
            "footer": "footer",
            "greetings": "greetings",
            "instagram_link": "instagram_link",
            "subject_expired": "subject_expired",
            "website_link": "website_link",
            "whatsapp_number": "whatsapp_number"
          },
          "date_created": "2000-01-23",
          "default_currency_code": "USD",
          "developer_message": "Operation Succcessful",
          "email_settings": {
            "password": "password",
            "smtp_port": "smtp_port",
            "smtp_server": "smtp_server",
            "username": "xyz@hotmail.com"
          },
          "image": "",
          "image_type": "image_type",
          "is_active": false,
          "is_whitelabel": false,
          "notification_type": "notification_type",
          "qr_code_email": {
            "activation_code": "activation_code",
            "android_users": "android_users",
            "body_1": "body_1",
            "body_2": "body_2",
            "bundle_consumption_link": "bundle_consumption_link",
            "bundle_consumption_sentence": "bundle_consumption_sentence",
            "company_name_team": "company_name_team",
            "data_bundle_details": "data_bundle_details",
            "email-image_type": "email-image_type",
            "email-logo_type": "email-logo_type",
            "email_image_qrcode": "email_image_qrcode",
            "email_logo": "email_logo",
            "facebook_link": "facebook_link",
            "footer": "footer",
            "greetings": "greetings",
            "instagram_link": "instagram_link",
            "instructions_link": "instructions_link",
            "invoice_details": "invoice_details",
            "ios_users": "ios_users",
            "matching_id": "matching_id",
            "smdp_address": "smdp_address",
            "subject_qrcode": "subject_qrcode",
            "topup_link": "topup_link",
            "topup_sentence": "topup_sentence",
            "website_link": "website_link",
            "whatsapp_number": "whatsapp_number"
          },
          "rate_revenue": 12,
          "request_custom_email": true,
          "reseller_category": "reseller_category",
          "reseller_id": "507f191e810c19729de860ea",
          "reseller_name": "Nakhal",
          "reseller_type": "prepaid",
          "response_code": "1",
          "support_topup": false,
          "supports_multibranches": false,
          "supports_promo": true,
          "supports_vouchers": true,
          "tenant_name": "tenant_name",
          "title": "Success",
          "vendors_for_balance_deduction_list": [
            "vendors_for_balance_deduction_list",
            "vendors_for_balance_deduction_list"
          ],
          "voucher_rate": 12
        },
        "properties": {
          "active_vendors_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "balance": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "balance_in_additional_currency": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "balance_warning_limit": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "callback_url": {
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Reseller_contact"
          },
          "corp_rate_revenue": {
            "description": "corporate revenue in percent",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": 0,
            "type": "number"
          },
          "credit_limit": {
            "default": 0,
            "description": "postpaid limit",
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "credit_limit_in_additional_currency": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "credit_warning_limit": {
            "default": 0,
            "description": "credit warning limit in percentage",
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "currency_code": {
            "default": "USD",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "custom_email_template_data": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_expired": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_qr": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "data_consumption_email": {
            "$ref": "#/components/schemas/Reseller_data_consumption_email"
          },
          "data_expired_email": {
            "$ref": "#/components/schemas/Reseller_data_expired_email"
          },
          "date_created": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "default_currency_code": {
            "default": "USD",
            "maxLength": 15,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "email_settings": {
            "$ref": "#/components/schemas/Reseller_email_settings"
          },
          "image": {
            "description": "The image file of the user",
            "format": "binary",
            "type": "string"
          },
          "image_type": {
            "type": "string"
          },
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "is_whitelabel": {
            "default": false,
            "type": "boolean"
          },
          "notification_type": {
            "type": "string"
          },
          "qr_code_email": {
            "$ref": "#/components/schemas/Reseller_qr_code_email"
          },
          "rate_revenue": {
            "default": 0,
            "description": "rate revenue in percent",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": 0,
            "type": "number"
          },
          "request_custom_email": {
            "default": true,
            "type": "boolean"
          },
          "reseller_category": {
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "reseller_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_type": {
            "default": "prepaid",
            "enum": [
              "prepaid",
              "postpaid"
            ],
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "support_topup": {
            "default": false,
            "type": "boolean"
          },
          "supports_multibranches": {
            "default": false,
            "type": "boolean"
          },
          "supports_promo": {
            "type": "boolean"
          },
          "supports_vouchers": {
            "type": "boolean"
          },
          "tenant_name": {
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "vendors_for_balance_deduction_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "voucher_rate": {
            "example": 12,
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "balance",
          "contact",
          "currency_code",
          "date_created",
          "is_active",
          "reseller_id",
          "reseller_name",
          "reseller_type",
          "support_topup"
        ],
        "type": "object"
      },
      "GetRoleResponse": {
        "additionalProperties": false,
        "example": {
          "access_level": "basic",
          "description": "Has Full Authority Over Reseller",
          "name": "ResellerAdmin",
          "permission_level": 1,
          "permissions": [
            {
              "api_name": "topupBundle",
              "permission_type": "Self"
            },
            {
              "api_name": "topupBundle",
              "permission_type": "Self"
            }
          ],
          "role_id": "507f191e810c19729de860ea"
        },
        "properties": {
          "access_level": {
            "enum": [
              "basic",
              "medium",
              "sensitive"
            ],
            "example": "basic",
            "type": "string"
          },
          "description": {
            "example": "Has Full Authority Over Reseller",
            "maxLength": 2000,
            "minLength": 0,
            "pattern": "^[a-zA-Z .,']+$",
            "type": "string"
          },
          "name": {
            "example": "ResellerAdmin",
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "permission_level": {
            "format": "int32",
            "maximum": 3,
            "minimum": 1,
            "type": "integer"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/CreateRoleRequest_permissions"
            },
            "type": "array"
          },
          "role_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          }
        },
        "required": [
          "access_level",
          "name",
          "permissions",
          "role_id"
        ],
        "type": "object"
      },
      "GetTransactionHistoryResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success",
          "total_transactions_count": 0,
          "transactions": [
            {
              "additional_currency_code": "SAR",
              "amount": 20,
              "amount_additional_currency": 20,
              "branch_id": "507f191e810c19729de860ea",
              "date_created": "2000-01-23T04:56:07+00:00",
              "destination_branch_id": "507f191e810c19729de860ea",
              "order_id": "507f191e810c19729de860ea",
              "refund_reason": "User Did not have good coverage.",
              "reseller_id": "507f191e810c19729de860ea",
              "transaction_id": "507f191e810c19729de860ea",
              "type": "type"
            },
            {
              "additional_currency_code": "SAR",
              "amount": 20,
              "amount_additional_currency": 20,
              "branch_id": "507f191e810c19729de860ea",
              "date_created": "2000-01-23T04:56:07+00:00",
              "destination_branch_id": "507f191e810c19729de860ea",
              "order_id": "507f191e810c19729de860ea",
              "refund_reason": "User Did not have good coverage.",
              "reseller_id": "507f191e810c19729de860ea",
              "transaction_id": "507f191e810c19729de860ea",
              "type": "type"
            }
          ]
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_transactions_count": {
            "minimum": 0,
            "type": "integer"
          },
          "transactions": {
            "items": {
              "$ref": "#/components/schemas/GetTransactionHistoryResponse_transactions"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetTransactionHistoryResponse_transactions": {
        "additionalProperties": false,
        "example": {
          "additional_currency_code": "SAR",
          "amount": 20,
          "amount_additional_currency": 20,
          "branch_id": "507f191e810c19729de860ea",
          "date_created": "2000-01-23T04:56:07+00:00",
          "destination_branch_id": "507f191e810c19729de860ea",
          "order_id": "507f191e810c19729de860ea",
          "refund_reason": "User Did not have good coverage.",
          "reseller_id": "507f191e810c19729de860ea",
          "transaction_id": "507f191e810c19729de860ea",
          "type": "type"
        },
        "properties": {
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "amount": {
            "example": 20,
            "format": "float",
            "type": "number"
          },
          "amount_additional_currency": {
            "example": 20,
            "format": "float",
            "type": "number"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "destination_branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "refund_reason": {
            "example": "User Did not have good coverage.",
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "transaction_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetVoucherUseHistoryResponse": {
        "additionalProperties": false,
        "example": {
          "data": [
            {
              "amount": 6.0274563,
              "branch_id": "507f191e810c19729de860ea",
              "currency_code": "USD",
              "date_created": "2000-01-23T04:56:07+00:00",
              "reseller_id": "507f191e810c19729de860ea",
              "username": "john snow",
              "voucher_code": "Adventure30",
              "voucher_name": "Adventure30",
              "voucher_use_id": "507f191e810c19729de860ea"
            },
            {
              "amount": 6.0274563,
              "branch_id": "507f191e810c19729de860ea",
              "currency_code": "USD",
              "date_created": "2000-01-23T04:56:07+00:00",
              "reseller_id": "507f191e810c19729de860ea",
              "username": "john snow",
              "voucher_code": "Adventure30",
              "voucher_name": "Adventure30",
              "voucher_use_id": "507f191e810c19729de860ea"
            }
          ],
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success",
          "total_uses_count": 0
        },
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/GetVoucherUseHistoryResponse_data"
            },
            "type": "array"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_uses_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetVoucherUseHistoryResponse_data": {
        "additionalProperties": false,
        "example": {
          "amount": 6.0274563,
          "branch_id": "507f191e810c19729de860ea",
          "currency_code": "USD",
          "date_created": "2000-01-23T04:56:07+00:00",
          "reseller_id": "507f191e810c19729de860ea",
          "username": "john snow",
          "voucher_code": "Adventure30",
          "voucher_name": "Adventure30",
          "voucher_use_id": "507f191e810c19729de860ea"
        },
        "properties": {
          "amount": {
            "format": "float",
            "type": "number"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "currency_code": {
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "username": {
            "example": "john snow",
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "voucher_code": {
            "example": "Adventure30",
            "type": "string"
          },
          "voucher_name": {
            "example": "Adventure30",
            "type": "string"
          },
          "voucher_use_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetVouchersBundledResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success",
          "total_vouchers_count": 0,
          "vouchers": [
            {
              "datetime": "2000-01-23T04:56:07+00:00",
              "expiry_datetime": "2000-01-23T04:56:07+00:00",
              "quantity": 1,
              "reseller_id": "507f191e810c19729de860ea",
              "voucher_name": "Adventure30",
              "voucher_type": "default"
            },
            {
              "datetime": "2000-01-23T04:56:07+00:00",
              "expiry_datetime": "2000-01-23T04:56:07+00:00",
              "quantity": 1,
              "reseller_id": "507f191e810c19729de860ea",
              "voucher_name": "Adventure30",
              "voucher_type": "default"
            }
          ]
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_vouchers_count": {
            "minimum": 0,
            "type": "integer"
          },
          "vouchers": {
            "items": {
              "$ref": "#/components/schemas/GetVouchersBundledResponse_vouchers"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetVouchersBundledResponse_vouchers": {
        "additionalProperties": false,
        "example": {
          "datetime": "2000-01-23T04:56:07+00:00",
          "expiry_datetime": "2000-01-23T04:56:07+00:00",
          "quantity": 1,
          "reseller_id": "507f191e810c19729de860ea",
          "voucher_name": "Adventure30",
          "voucher_type": "default"
        },
        "properties": {
          "datetime": {
            "format": "date-time",
            "type": "string"
          },
          "expiry_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "quantity": {
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "voucher_name": {
            "example": "Adventure30",
            "maxLength": 30,
            "type": "string"
          },
          "voucher_type": {
            "default": "default",
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "expiry_datetime",
          "quantity",
          "voucher_name"
        ],
        "type": "object"
      },
      "GetVouchersResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success",
          "total_vouchers_count": 0,
          "vouchers": [
            {
              "amount": 30,
              "datetime": "2000-01-23T04:56:07+00:00",
              "expiry_datetime": "2000-01-23T04:56:07+00:00",
              "is_active": true,
              "is_used": true,
              "reason": "When adventure calls, you gotta answer!",
              "reseller_amount": 30,
              "reseller_id": "507f191e810c19729de860ea",
              "status": "status",
              "voucher_code": "voucher_code",
              "voucher_id": "507f191e810c19729de860ea",
              "voucher_name": "Adventure30",
              "voucher_type": "voucher_type"
            },
            {
              "amount": 30,
              "datetime": "2000-01-23T04:56:07+00:00",
              "expiry_datetime": "2000-01-23T04:56:07+00:00",
              "is_active": true,
              "is_used": true,
              "reason": "When adventure calls, you gotta answer!",
              "reseller_amount": 30,
              "reseller_id": "507f191e810c19729de860ea",
              "status": "status",
              "voucher_code": "voucher_code",
              "voucher_id": "507f191e810c19729de860ea",
              "voucher_name": "Adventure30",
              "voucher_type": "voucher_type"
            }
          ]
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_vouchers_count": {
            "minimum": 0,
            "type": "integer"
          },
          "vouchers": {
            "items": {
              "$ref": "#/components/schemas/GetVouchersResponse_vouchers"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetVouchersResponse_vouchers": {
        "additionalProperties": false,
        "example": {
          "amount": 30,
          "datetime": "2000-01-23T04:56:07+00:00",
          "expiry_datetime": "2000-01-23T04:56:07+00:00",
          "is_active": true,
          "is_used": true,
          "reason": "When adventure calls, you gotta answer!",
          "reseller_amount": 30,
          "reseller_id": "507f191e810c19729de860ea",
          "status": "status",
          "voucher_code": "voucher_code",
          "voucher_id": "507f191e810c19729de860ea",
          "voucher_name": "Adventure30",
          "voucher_type": "voucher_type"
        },
        "properties": {
          "amount": {
            "example": 30,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "datetime": {
            "format": "date-time",
            "type": "string"
          },
          "expiry_datetime": {
            "format": "date-time",
            "type": "string"
          },
          "is_active": {
            "readOnly": true,
            "type": "boolean"
          },
          "is_used": {
            "type": "boolean"
          },
          "reason": {
            "example": "When adventure calls, you gotta answer!",
            "maxLength": 300,
            "type": "string"
          },
          "reseller_amount": {
            "example": 30,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "status": {
            "maxLength": 30,
            "type": "string"
          },
          "voucher_code": {
            "type": "string"
          },
          "voucher_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "voucher_name": {
            "example": "Adventure30",
            "maxLength": 30,
            "type": "string"
          },
          "voucher_type": {
            "maxLength": 30,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "expiry_datetime",
          "reseller_amount",
          "voucher_code",
          "voucher_name"
        ],
        "type": "object"
      },
      "IssueReport": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "issues": [
            {
              "added_by": "507f191e810c19729de860ea",
              "assignee": "SimWeGo Support",
              "branch_id": "507f191e810c19729de860ea",
              "chat": [
                {
                  "added_by": "507f191e810c19729de860ea",
                  "added_by_name": "John Wick",
                  "added_by_type": "added_by_type",
                  "attachement": "attachement",
                  "date_created": "2000-01-23",
                  "file_size": 16.7,
                  "message": "message"
                },
                {
                  "added_by": "507f191e810c19729de860ea",
                  "added_by_name": "John Wick",
                  "added_by_type": "added_by_type",
                  "attachement": "attachement",
                  "date_created": "2000-01-23",
                  "file_size": 16.7,
                  "message": "message"
                }
              ],
              "date_created": "2000-01-23",
              "feedback": {
                "comments": "comments",
                "satisfaction": 4
              },
              "issue_description": "issue_description",
              "issue_subject": "issue_subject",
              "issue_type": "Technical Issue",
              "last_modified": "2000-01-23",
              "priority": 2,
              "report_id": "507f191e810c19729de860ea",
              "requester": "John Wick",
              "reseller_id": "507f191e810c19729de860ea",
              "resolution": "resolution",
              "status": "Open"
            },
            {
              "added_by": "507f191e810c19729de860ea",
              "assignee": "SimWeGo Support",
              "branch_id": "507f191e810c19729de860ea",
              "chat": [
                {
                  "added_by": "507f191e810c19729de860ea",
                  "added_by_name": "John Wick",
                  "added_by_type": "added_by_type",
                  "attachement": "attachement",
                  "date_created": "2000-01-23",
                  "file_size": 16.7,
                  "message": "message"
                },
                {
                  "added_by": "507f191e810c19729de860ea",
                  "added_by_name": "John Wick",
                  "added_by_type": "added_by_type",
                  "attachement": "attachement",
                  "date_created": "2000-01-23",
                  "file_size": 16.7,
                  "message": "message"
                }
              ],
              "date_created": "2000-01-23",
              "feedback": {
                "comments": "comments",
                "satisfaction": 4
              },
              "issue_description": "issue_description",
              "issue_subject": "issue_subject",
              "issue_type": "Technical Issue",
              "last_modified": "2000-01-23",
              "priority": 2,
              "report_id": "507f191e810c19729de860ea",
              "requester": "John Wick",
              "reseller_id": "507f191e810c19729de860ea",
              "resolution": "resolution",
              "status": "Open"
            }
          ],
          "response_code": "1",
          "title": "Success",
          "total_issues_count": 0
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "issues": {
            "items": {
              "$ref": "#/components/schemas/IssueReport_issues"
            },
            "type": "array"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "total_issues_count": {
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "IssueReport_chat": {
        "additionalProperties": false,
        "example": {
          "added_by": "507f191e810c19729de860ea",
          "added_by_name": "John Wick",
          "added_by_type": "added_by_type",
          "attachement": "attachement",
          "date_created": "2000-01-23",
          "file_size": 16.7,
          "message": "message"
        },
        "properties": {
          "added_by": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "added_by_name": {
            "example": "John Wick",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "added_by_type": {
            "readOnly": true,
            "type": "string"
          },
          "attachement": {
            "description": "Attachement Url",
            "type": "string"
          },
          "date_created": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "file_size": {
            "description": "in kiloBytes",
            "example": 16.7,
            "format": "float",
            "type": "number"
          },
          "message": {
            "description": "Detailed description of the issue or concern.",
            "maxLength": 10000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "IssueReport_feedback": {
        "additionalProperties": false,
        "example": {
          "comments": "comments",
          "satisfaction": 4
        },
        "properties": {
          "comments": {
            "description": "Additional comments on the resolution process.",
            "type": "string"
          },
          "satisfaction": {
            "description": "User satisfaction rating (e.g., 1-5, with 5 being the highest).",
            "example": 4,
            "maximum": 5,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "satisfaction"
        ],
        "type": "object"
      },
      "IssueReport_issues": {
        "additionalProperties": false,
        "example": {
          "added_by": "507f191e810c19729de860ea",
          "assignee": "SimWeGo Support",
          "branch_id": "507f191e810c19729de860ea",
          "chat": [
            {
              "added_by": "507f191e810c19729de860ea",
              "added_by_name": "John Wick",
              "added_by_type": "added_by_type",
              "attachement": "attachement",
              "date_created": "2000-01-23",
              "file_size": 16.7,
              "message": "message"
            },
            {
              "added_by": "507f191e810c19729de860ea",
              "added_by_name": "John Wick",
              "added_by_type": "added_by_type",
              "attachement": "attachement",
              "date_created": "2000-01-23",
              "file_size": 16.7,
              "message": "message"
            }
          ],
          "date_created": "2000-01-23",
          "feedback": {
            "comments": "comments",
            "satisfaction": 4
          },
          "issue_description": "issue_description",
          "issue_subject": "issue_subject",
          "issue_type": "Technical Issue",
          "last_modified": "2000-01-23",
          "priority": 2,
          "report_id": "507f191e810c19729de860ea",
          "requester": "John Wick",
          "reseller_id": "507f191e810c19729de860ea",
          "resolution": "resolution",
          "status": "Open"
        },
        "properties": {
          "added_by": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "assignee": {
            "example": "SimWeGo Support",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "branch_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "chat": {
            "items": {
              "$ref": "#/components/schemas/IssueReport_chat"
            },
            "type": "array"
          },
          "date_created": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "feedback": {
            "$ref": "#/components/schemas/IssueReport_feedback"
          },
          "issue_description": {
            "description": "Detailed description of the issue or concern.",
            "maxLength": 10000,
            "type": "string"
          },
          "issue_subject": {
            "description": "Summary of Issue",
            "maxLength": 500,
            "type": "string"
          },
          "issue_type": {
            "description": "Type of the issue (e.g., \"Technical Issue\" or \"Price-related Concern\").",
            "enum": [
              "Technical Issue",
              "Price-related Concern"
            ],
            "type": "string"
          },
          "last_modified": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "priority": {
            "default": 3,
            "description": "Priority level of the issue (\"Critical :1\", \"High:2\", \"Medium:3\", or \"Low:4\").",
            "maximum": 4,
            "minimum": 1,
            "type": "integer"
          },
          "report_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "requester": {
            "example": "John Wick",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "resolution": {
            "description": "Final resolution before closing the issue.",
            "maxLength": 10000,
            "type": "string"
          },
          "status": {
            "enum": [
              "Open",
              "Closed",
              "Under Review"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoginRequest": {
        "additionalProperties": false,
        "properties": {
          "password": {
            "example": "$3343JcS24",
            "maxLength": 30,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})",
            "type": "string",
            "writeOnly": true
          },
          "username": {
            "example": "admin",
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ],
        "type": "object"
      },
      "LoginResponse": {
        "additionalProperties": false,
        "example": {
          "access_token": "aZlDaRa6Ijp7ImJyYW5jaF9pZCI6IjYyOGUxNWVhNjJhNTAwODU1Y2UwYjMwYSIsInJvbGVfaWQiOiJmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYiLCJzdWIiOiIzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMiLCJ0ZW5hbnRfaWQiOiI1NTU1NjY2NmZmZmYwMDAwZmZmZjAwMDIifSwiZXhwIjoiNDk0NS0wMy0wMlQxMTo1NTowNiswMjowMCJ9kmqQxGGJzbXrTDMqr16Ojk89dUhf4z5nZWfExW66oSZAWdBcE_7WPbgAQ5xh4vr6hLvvueL0BHfUqv93rqYxBw",
          "agent_id": "507f191e810c19729de860ea",
          "developer_message": "Operation Succcessful",
          "expires_in": 300,
          "message": "Credentials Valid, User Logged In",
          "permission_level": 1,
          "refresh_expires_in": 1800,
          "refresh_token": "eyJhhsghdjxSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJLdGN5U1BUYndSSzk0UWU4Rlg0VEtKeU1hQ3pMdkRacWxackhuLUNRdjA0In0.eyJleHAiOjE2NzA0MTA4MDYsImlhdCI6MTY3MDQxMDUwNiwianRpIjoiODg4YWZhOTgtYjlkNy00OTQ3LTkzMjYtMjhlMGU5YTVkYTFkIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9Nb250eU1vYmlsZSIsInN1YiI6IjhhYjdjOTA2LTFkM2YtNGExMi1iYmIyLWE3YzczNDkwM2ViMiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFkbWluLWNsaSIsInNlc3Npb25fc3RhdGUiOiI3OTBlZmRlNi0xYzdlLTQ4ZmQtOTI5YS1lMmU5NzRiYTA2MzEiLCJhY3IiOiIxIiwicmVzb3VyY2VfYWNjZXNzIjp7ImFkbWluLWNsaSI6eyJyb2xlcyI6WyJSZXNlbGxlckFkbWluIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwic2lkIjoiNzkwZWZkZTYtMWM3ZS00OGZkLTkyOWEtZTJlOTc0YmEwNjMxIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJyb2xlX2lkIjoiNjM4ZWY1ZTFmZDg1YmYxNzI2MGJiMzc3IiwidXNlcl9pZCI6IjYzOGYwMTlkNWQ1MGE5MDkxOWI1YTgzMSIsIm5hbWUiOiJhZG1pbiB1bmtvd24iLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJuYWtoYWwuYWRtaW4iLCJnaXZlbl9uYW1lIjoiYWRtaW4iLCJmYW1pbHlfbmFtZSI6InVua293biIsImVtYWlsIjoieHl6MkBob3RtYWlsLmNvbSIsInJlc2VsbGVyX2lkIjoiNjM4ZWY2MTZhODZmMjRhNWUwYWUwOTQ5In0.Jszo9pMjIv9EyGAPDENNgpG0sJnGaVIh4WIsDLnHCvS2AeyRgWQbVXTYyh_SeeoXU4B77v3U4pHSCiS3VprsL79iS4QR_vgspTngBvFsIbKirsxSdY7bQUuU39uJiLXx3eQnWEX4SUf5vH7bH11pGX_0m17lWo5THd_mL8MguSBY2zkkPRsRjFjfwHU-IuMY0qTt14ty6kMYSMdDURlWyA-XmXSUMLVtvU1dm1ig6j2disRdz13kj4wwFkw71IXsPQHXGLWoTdqXPxE-KIxiHZgNV580_IUlZwY-dVRp4ZA2QC3kOOD4ivrOb7VYqikvbihF90eugYv9S2BkVOVdog",
          "reseller_currency_code": "reseller_currency_code",
          "reseller_id": "507f191e810c19729de860ea",
          "response_code": "1",
          "role_name": "ResellerAdmin",
          "supports_promo": true,
          "supports_vouchers": true,
          "title": "Success",
          "token_type": "ApiKey"
        },
        "properties": {
          "access_token": {
            "example": "aZlDaRa6Ijp7ImJyYW5jaF9pZCI6IjYyOGUxNWVhNjJhNTAwODU1Y2UwYjMwYSIsInJvbGVfaWQiOiJmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYiLCJzdWIiOiIzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMiLCJ0ZW5hbnRfaWQiOiI1NTU1NjY2NmZmZmYwMDAwZmZmZjAwMDIifSwiZXhwIjoiNDk0NS0wMy0wMlQxMTo1NTowNiswMjowMCJ9kmqQxGGJzbXrTDMqr16Ojk89dUhf4z5nZWfExW66oSZAWdBcE_7WPbgAQ5xh4vr6hLvvueL0BHfUqv93rqYxBw",
            "type": "string"
          },
          "agent_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "expires_in": {
            "minimum": 300,
            "type": "integer"
          },
          "message": {
            "example": "Credentials Valid, User Logged In",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "permission_level": {
            "format": "int32",
            "maximum": 3,
            "minimum": 1,
            "type": "integer"
          },
          "refresh_expires_in": {
            "minimum": 1800,
            "type": "integer"
          },
          "refresh_token": {
            "example": "eyJhhsghdjxSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJLdGN5U1BUYndSSzk0UWU4Rlg0VEtKeU1hQ3pMdkRacWxackhuLUNRdjA0In0.eyJleHAiOjE2NzA0MTA4MDYsImlhdCI6MTY3MDQxMDUwNiwianRpIjoiODg4YWZhOTgtYjlkNy00OTQ3LTkzMjYtMjhlMGU5YTVkYTFkIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9Nb250eU1vYmlsZSIsInN1YiI6IjhhYjdjOTA2LTFkM2YtNGExMi1iYmIyLWE3YzczNDkwM2ViMiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFkbWluLWNsaSIsInNlc3Npb25fc3RhdGUiOiI3OTBlZmRlNi0xYzdlLTQ4ZmQtOTI5YS1lMmU5NzRiYTA2MzEiLCJhY3IiOiIxIiwicmVzb3VyY2VfYWNjZXNzIjp7ImFkbWluLWNsaSI6eyJyb2xlcyI6WyJSZXNlbGxlckFkbWluIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwic2lkIjoiNzkwZWZkZTYtMWM3ZS00OGZkLTkyOWEtZTJlOTc0YmEwNjMxIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJyb2xlX2lkIjoiNjM4ZWY1ZTFmZDg1YmYxNzI2MGJiMzc3IiwidXNlcl9pZCI6IjYzOGYwMTlkNWQ1MGE5MDkxOWI1YTgzMSIsIm5hbWUiOiJhZG1pbiB1bmtvd24iLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJuYWtoYWwuYWRtaW4iLCJnaXZlbl9uYW1lIjoiYWRtaW4iLCJmYW1pbHlfbmFtZSI6InVua293biIsImVtYWlsIjoieHl6MkBob3RtYWlsLmNvbSIsInJlc2VsbGVyX2lkIjoiNjM4ZWY2MTZhODZmMjRhNWUwYWUwOTQ5In0.Jszo9pMjIv9EyGAPDENNgpG0sJnGaVIh4WIsDLnHCvS2AeyRgWQbVXTYyh_SeeoXU4B77v3U4pHSCiS3VprsL79iS4QR_vgspTngBvFsIbKirsxSdY7bQUuU39uJiLXx3eQnWEX4SUf5vH7bH11pGX_0m17lWo5THd_mL8MguSBY2zkkPRsRjFjfwHU-IuMY0qTt14ty6kMYSMdDURlWyA-XmXSUMLVtvU1dm1ig6j2disRdz13kj4wwFkw71IXsPQHXGLWoTdqXPxE-KIxiHZgNV580_IUlZwY-dVRp4ZA2QC3kOOD4ivrOb7VYqikvbihF90eugYv9S2BkVOVdog",
            "type": "string"
          },
          "reseller_currency_code": {
            "maxLength": 15,
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "role_name": {
            "example": "ResellerAdmin",
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "supports_promo": {
            "type": "boolean"
          },
          "supports_vouchers": {
            "type": "boolean"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "token_type": {
            "enum": [
              "ApiKey"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogoutResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Log Out Successful",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Log Out Successful",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManageNetworkListRequest": {
        "additionalProperties": false,
        "properties": {
          "networks": {
            "items": {
              "$ref": "#/components/schemas/ManageNetworkListRequest_networks"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "ManageNetworkListRequest_networks": {
        "additionalProperties": false,
        "properties": {
          "country_code": {
            "example": "FRA",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "is_shown": {
            "default": true,
            "type": "boolean"
          },
          "operator_list": {
            "items": {
              "example": "Voda",
              "maxLength": 100,
              "minLength": 2,
              "pattern": "^[a-zA-Z ']+$",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "vendor_name": {
            "example": "Venderino",
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          }
        },
        "required": [
          "country_code",
          "operator_list",
          "vendor_name"
        ],
        "type": "object"
      },
      "ManageNetworkListResponse": {
        "additionalProperties": false,
        "example": {
          "detail": "Networks have been modified Successfully",
          "developer_message": "Operation Succcessful",
          "invalid_networks": [
            {
              "country_code": "ZZZ",
              "vendor_name": "Johnnies net"
            },
            {
              "country_code": "ZZZ",
              "vendor_name": "Johnnies net"
            }
          ],
          "message": "Networks have been modified Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "detail": {
            "example": "Networks have been modified Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "invalid_networks": {
            "items": {
              "$ref": "#/components/schemas/ManageNetworkListResponse_invalid_networks"
            },
            "type": "array",
            "uniqueItems": true
          },
          "message": {
            "example": "Networks have been modified Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManageNetworkListResponse_invalid_networks": {
        "additionalProperties": false,
        "example": {
          "country_code": "ZZZ",
          "vendor_name": "Johnnies net"
        },
        "properties": {
          "country_code": {
            "example": "ZZZ",
            "type": "string"
          },
          "vendor_name": {
            "example": "Johnnies net",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkList": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "networks": [
            {
              "country_code": "FRA",
              "is_shown": true,
              "network_id": "507f191e810c19729de860ea",
              "operator_list": [
                "Voda",
                "Voda"
              ],
              "vendor_name": "Saudi Arabian Rial"
            },
            {
              "country_code": "FRA",
              "is_shown": true,
              "network_id": "507f191e810c19729de860ea",
              "operator_list": [
                "Voda",
                "Voda"
              ],
              "vendor_name": "Saudi Arabian Rial"
            }
          ],
          "networks_count": 1000,
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "networks": {
            "items": {
              "$ref": "#/components/schemas/NetworkList_networks"
            },
            "type": "array",
            "uniqueItems": true
          },
          "networks_count": {
            "example": 1000,
            "type": "integer"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "required": [
          "networks"
        ],
        "type": "object"
      },
      "NetworkListByRegionsResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "networks": [
            {
              "countries": [
                {
                  "country_code": "IN",
                  "country_name": "India",
                  "networks": [
                    {
                      "network_id": "1",
                      "network_name": [
                        "network_name",
                        "network_name"
                      ]
                    },
                    {
                      "network_id": "1",
                      "network_name": [
                        "network_name",
                        "network_name"
                      ]
                    }
                  ]
                },
                {
                  "country_code": "IN",
                  "country_name": "India",
                  "networks": [
                    {
                      "network_id": "1",
                      "network_name": [
                        "network_name",
                        "network_name"
                      ]
                    },
                    {
                      "network_id": "1",
                      "network_name": [
                        "network_name",
                        "network_name"
                      ]
                    }
                  ]
                }
              ],
              "region_code": "1",
              "region_name": "Asia"
            },
            {
              "countries": [
                {
                  "country_code": "IN",
                  "country_name": "India",
                  "networks": [
                    {
                      "network_id": "1",
                      "network_name": [
                        "network_name",
                        "network_name"
                      ]
                    },
                    {
                      "network_id": "1",
                      "network_name": [
                        "network_name",
                        "network_name"
                      ]
                    }
                  ]
                },
                {
                  "country_code": "IN",
                  "country_name": "India",
                  "networks": [
                    {
                      "network_id": "1",
                      "network_name": [
                        "network_name",
                        "network_name"
                      ]
                    },
                    {
                      "network_id": "1",
                      "network_name": [
                        "network_name",
                        "network_name"
                      ]
                    }
                  ]
                }
              ],
              "region_code": "1",
              "region_name": "Asia"
            }
          ],
          "networks_count": 1000,
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "networks": {
            "items": {
              "$ref": "#/components/schemas/NetworkListByRegionsResponse_networks_1"
            },
            "type": "array"
          },
          "networks_count": {
            "example": 1000,
            "type": "integer"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkListByRegionsResponse_countries": {
        "additionalProperties": false,
        "example": {
          "country_code": "IN",
          "country_name": "India",
          "networks": [
            {
              "network_id": "1",
              "network_name": [
                "network_name",
                "network_name"
              ]
            },
            {
              "network_id": "1",
              "network_name": [
                "network_name",
                "network_name"
              ]
            }
          ]
        },
        "properties": {
          "country_code": {
            "description": "ISO country code.",
            "example": "IN",
            "type": "string"
          },
          "country_name": {
            "description": "Name of the country.",
            "example": "India",
            "type": "string"
          },
          "networks": {
            "description": "List of networks in the country.",
            "items": {
              "$ref": "#/components/schemas/NetworkListByRegionsResponse_networks"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkListByRegionsResponse_networks": {
        "example": {
          "network_id": "1",
          "network_name": [
            "network_name",
            "network_name"
          ]
        },
        "properties": {
          "network_id": {
            "description": "Unique identifier for the network.",
            "example": "1",
            "type": "string"
          },
          "network_name": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkListByRegionsResponse_networks_1": {
        "additionalProperties": false,
        "example": {
          "countries": [
            {
              "country_code": "IN",
              "country_name": "India",
              "networks": [
                {
                  "network_id": "1",
                  "network_name": [
                    "network_name",
                    "network_name"
                  ]
                },
                {
                  "network_id": "1",
                  "network_name": [
                    "network_name",
                    "network_name"
                  ]
                }
              ]
            },
            {
              "country_code": "IN",
              "country_name": "India",
              "networks": [
                {
                  "network_id": "1",
                  "network_name": [
                    "network_name",
                    "network_name"
                  ]
                },
                {
                  "network_id": "1",
                  "network_name": [
                    "network_name",
                    "network_name"
                  ]
                }
              ]
            }
          ],
          "region_code": "1",
          "region_name": "Asia"
        },
        "properties": {
          "countries": {
            "description": "List of countries in the region.",
            "items": {
              "$ref": "#/components/schemas/NetworkListByRegionsResponse_countries"
            },
            "type": "array"
          },
          "region_code": {
            "description": "Unique identifier for the region.",
            "example": "1",
            "type": "string"
          },
          "region_name": {
            "description": "Name of the region.",
            "example": "Asia",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkListCSV_body": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "format": "binary",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "type": "object"
      },
      "NetworkList_networks": {
        "additionalProperties": false,
        "example": {
          "country_code": "FRA",
          "is_shown": true,
          "network_id": "507f191e810c19729de860ea",
          "operator_list": [
            "Voda",
            "Voda"
          ],
          "vendor_name": "Saudi Arabian Rial"
        },
        "properties": {
          "country_code": {
            "example": "FRA",
            "maxLength": 3,
            "minLength": 3,
            "type": "string"
          },
          "is_shown": {
            "default": true,
            "type": "boolean"
          },
          "network_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "operator_list": {
            "items": {
              "example": "Voda",
              "maxLength": 100,
              "minLength": 2,
              "pattern": "^[a-zA-Z ']+$",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "vendor_name": {
            "example": "Saudi Arabian Rial",
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ObjectID": {
        "example": "507f191e810c19729de860ea",
        "format": "hex",
        "maxLength": 24,
        "minLength": 24,
        "pattern": "^[0-9a-fA-F]{24}$",
        "type": "string"
      },
      "Orders_ResendEmail_body": {
        "additionalProperties": false,
        "properties": {
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          }
        },
        "required": [
          "order_id"
        ],
        "type": "object"
      },
      "Orders_SendConsumptionEmail_body": {
        "additionalProperties": false,
        "properties": {
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          }
        },
        "required": [
          "order_id"
        ],
        "type": "object"
      },
      "PasswordResetRequest": {
        "additionalProperties": false,
        "properties": {
          "password": {
            "example": "$3343JcS2412345",
            "maxLength": 30,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{15,})",
            "type": "string",
            "writeOnly": true
          },
          "password_confirmation": {
            "example": "$3343JcS2412345",
            "maxLength": 30,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{15,})",
            "type": "string",
            "writeOnly": true
          },
          "password_reset_identifier": {
            "example": "1129037324695099832474129",
            "pattern": "^\\d{25}$",
            "type": "string"
          }
        },
        "required": [
          "password",
          "password_reset_identifier"
        ],
        "type": "object"
      },
      "PasswordResetResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Password Reset Successfully, please login to your account.",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Password Reset Successfully, please login to your account.",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RefreshTokenRequest": {
        "additionalProperties": false,
        "properties": {
          "refresh_token": {
            "example": "aZlDaRa6Ijp7ImJyYW5jaF9pZCI6IjYyOGUxNWVhNjJhNTAwODU1Y2UwYjMwYSIsInJvbGVfaWQiOiJmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYiLCJzdWIiOiIzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMiLCJ0ZW5hbnRfaWQiOiI1NTU1NjY2NmZmZmYwMDAwZmZmZjAwMDIifSwiZXhwIjoiNDk0NS0wMy0wMlQxMTo1NTowNiswMjowMCJ9kmqQxGGJzbXrTDMqr16Ojk89dUhf4z5nZWfExW66oSZAWdBcE_7WPbgAQ5xh4vr6hLvvueL0BHfUqv93rqYxBw",
            "maxLength": 2048,
            "minLength": 20,
            "nullable": false,
            "pattern": "^[A-Za-z0-9-_=.]+$",
            "type": "string"
          }
        },
        "required": [
          "refresh_token"
        ],
        "type": "object"
      },
      "RefreshTokenResponse": {
        "additionalProperties": false,
        "example": {
          "access_token": "aZlDaRa6Ijp7ImJyYW5jaF9pZCI6IjYyOGUxNWVhNjJhNTAwODU1Y2UwYjMwYSIsInJvbGVfaWQiOiJmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYiLCJzdWIiOiIzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMiLCJ0ZW5hbnRfaWQiOiI1NTU1NjY2NmZmZmYwMDAwZmZmZjAwMDIifSwiZXhwIjoiNDk0NS0wMy0wMlQxMTo1NTowNiswMjowMCJ9kmqQxGGJzbXrTDMqr16Ojk89dUhf4z5nZWfExW66oSZAWdBcE_7WPbgAQ5xh4vr6hLvvueL0BHfUqv93rqYxBw",
          "developer_message": "Operation Succcessful",
          "expires_in": 300,
          "message": "Credentials Valid, Access Token Refreshed",
          "permission_level": 1,
          "refresh_expires_in": 1800,
          "refresh_token": "eyJhhsghdjxSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJLdGN5U1BUYndSSzk0UWU4Rlg0VEtKeU1hQ3pMdkRacWxackhuLUNRdjA0In0.eyJleHAiOjE2NzA0MTA4MDYsImlhdCI6MTY3MDQxMDUwNiwianRpIjoiODg4YWZhOTgtYjlkNy00OTQ3LTkzMjYtMjhlMGU5YTVkYTFkIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9Nb250eU1vYmlsZSIsInN1YiI6IjhhYjdjOTA2LTFkM2YtNGExMi1iYmIyLWE3YzczNDkwM2ViMiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFkbWluLWNsaSIsInNlc3Npb25fc3RhdGUiOiI3OTBlZmRlNi0xYzdlLTQ4ZmQtOTI5YS1lMmU5NzRiYTA2MzEiLCJhY3IiOiIxIiwicmVzb3VyY2VfYWNjZXNzIjp7ImFkbWluLWNsaSI6eyJyb2xlcyI6WyJSZXNlbGxlckFkbWluIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwic2lkIjoiNzkwZWZkZTYtMWM3ZS00OGZkLTkyOWEtZTJlOTc0YmEwNjMxIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJyb2xlX2lkIjoiNjM4ZWY1ZTFmZDg1YmYxNzI2MGJiMzc3IiwidXNlcl9pZCI6IjYzOGYwMTlkNWQ1MGE5MDkxOWI1YTgzMSIsIm5hbWUiOiJhZG1pbiB1bmtvd24iLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJuYWtoYWwuYWRtaW4iLCJnaXZlbl9uYW1lIjoiYWRtaW4iLCJmYW1pbHlfbmFtZSI6InVua293biIsImVtYWlsIjoieHl6MkBob3RtYWlsLmNvbSIsInJlc2VsbGVyX2lkIjoiNjM4ZWY2MTZhODZmMjRhNWUwYWUwOTQ5In0.Jszo9pMjIv9EyGAPDENNgpG0sJnGaVIh4WIsDLnHCvS2AeyRgWQbVXTYyh_SeeoXU4B77v3U4pHSCiS3VprsL79iS4QR_vgspTngBvFsIbKirsxSdY7bQUuU39uJiLXx3eQnWEX4SUf5vH7bH11pGX_0m17lWo5THd_mL8MguSBY2zkkPRsRjFjfwHU-IuMY0qTt14ty6kMYSMdDURlWyA-XmXSUMLVtvU1dm1ig6j2disRdz13kj4wwFkw71IXsPQHXGLWoTdqXPxE-KIxiHZgNV580_IUlZwY-dVRp4ZA2QC3kOOD4ivrOb7VYqikvbihF90eugYv9S2BkVOVdog",
          "reseller_currency_code": "reseller_currency_code",
          "response_code": "1",
          "role_name": "ResellerAdmin",
          "supports_promo": true,
          "supports_vouchers": true,
          "title": "Success",
          "token_type": "ApiKey"
        },
        "properties": {
          "access_token": {
            "example": "aZlDaRa6Ijp7ImJyYW5jaF9pZCI6IjYyOGUxNWVhNjJhNTAwODU1Y2UwYjMwYSIsInJvbGVfaWQiOiJmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYiLCJzdWIiOiIzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMiLCJ0ZW5hbnRfaWQiOiI1NTU1NjY2NmZmZmYwMDAwZmZmZjAwMDIifSwiZXhwIjoiNDk0NS0wMy0wMlQxMTo1NTowNiswMjowMCJ9kmqQxGGJzbXrTDMqr16Ojk89dUhf4z5nZWfExW66oSZAWdBcE_7WPbgAQ5xh4vr6hLvvueL0BHfUqv93rqYxBw",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "expires_in": {
            "minimum": 300,
            "type": "integer"
          },
          "message": {
            "example": "Credentials Valid, Access Token Refreshed",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "permission_level": {
            "format": "int32",
            "maximum": 3,
            "minimum": 1,
            "type": "integer"
          },
          "refresh_expires_in": {
            "minimum": 1800,
            "type": "integer"
          },
          "refresh_token": {
            "example": "eyJhhsghdjxSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJLdGN5U1BUYndSSzk0UWU4Rlg0VEtKeU1hQ3pMdkRacWxackhuLUNRdjA0In0.eyJleHAiOjE2NzA0MTA4MDYsImlhdCI6MTY3MDQxMDUwNiwianRpIjoiODg4YWZhOTgtYjlkNy00OTQ3LTkzMjYtMjhlMGU5YTVkYTFkIiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL3JlYWxtcy9Nb250eU1vYmlsZSIsInN1YiI6IjhhYjdjOTA2LTFkM2YtNGExMi1iYmIyLWE3YzczNDkwM2ViMiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFkbWluLWNsaSIsInNlc3Npb25fc3RhdGUiOiI3OTBlZmRlNi0xYzdlLTQ4ZmQtOTI5YS1lMmU5NzRiYTA2MzEiLCJhY3IiOiIxIiwicmVzb3VyY2VfYWNjZXNzIjp7ImFkbWluLWNsaSI6eyJyb2xlcyI6WyJSZXNlbGxlckFkbWluIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwic2lkIjoiNzkwZWZkZTYtMWM3ZS00OGZkLTkyOWEtZTJlOTc0YmEwNjMxIiwiZW1haWxfdmVyaWZpZWQiOmZhbHNlLCJyb2xlX2lkIjoiNjM4ZWY1ZTFmZDg1YmYxNzI2MGJiMzc3IiwidXNlcl9pZCI6IjYzOGYwMTlkNWQ1MGE5MDkxOWI1YTgzMSIsIm5hbWUiOiJhZG1pbiB1bmtvd24iLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJuYWtoYWwuYWRtaW4iLCJnaXZlbl9uYW1lIjoiYWRtaW4iLCJmYW1pbHlfbmFtZSI6InVua293biIsImVtYWlsIjoieHl6MkBob3RtYWlsLmNvbSIsInJlc2VsbGVyX2lkIjoiNjM4ZWY2MTZhODZmMjRhNWUwYWUwOTQ5In0.Jszo9pMjIv9EyGAPDENNgpG0sJnGaVIh4WIsDLnHCvS2AeyRgWQbVXTYyh_SeeoXU4B77v3U4pHSCiS3VprsL79iS4QR_vgspTngBvFsIbKirsxSdY7bQUuU39uJiLXx3eQnWEX4SUf5vH7bH11pGX_0m17lWo5THd_mL8MguSBY2zkkPRsRjFjfwHU-IuMY0qTt14ty6kMYSMdDURlWyA-XmXSUMLVtvU1dm1ig6j2disRdz13kj4wwFkw71IXsPQHXGLWoTdqXPxE-KIxiHZgNV580_IUlZwY-dVRp4ZA2QC3kOOD4ivrOb7VYqikvbihF90eugYv9S2BkVOVdog",
            "type": "string"
          },
          "reseller_currency_code": {
            "maxLength": 15,
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "role_name": {
            "example": "ResellerAdmin",
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "supports_promo": {
            "type": "boolean"
          },
          "supports_vouchers": {
            "type": "boolean"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "token_type": {
            "enum": [
              "ApiKey"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "RefundOrderRequest": {
        "additionalProperties": false,
        "properties": {
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "refund_reason": {
            "example": "User Did not have good coverage.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RefundOrderResponse": {
        "additionalProperties": false,
        "example": {
          "Message": "Order Refunded Successfully",
          "developer_message": "Operation Succcessful",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "Message": {
            "example": "Order Refunded Successfully",
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegionGroupedBundlesResponse": {
        "properties": {
          "limit": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "regions": {
            "items": {
              "$ref": "#/components/schemas/RegionGroupedBundlesResponse_regions"
            },
            "type": "array"
          },
          "total_bundles": {
            "type": "integer"
          },
          "total_regions": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RegionGroupedBundlesResponse_regions": {
        "properties": {
          "bundles": {
            "items": {
              "$ref": "#/components/schemas/ResellerScopedBundle"
            },
            "type": "array"
          },
          "region": {
            "type": "string"
          },
          "region_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Reseller": {
        "additionalProperties": false,
        "properties": {
          "active_vendors_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "balance": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "balance_in_additional_currency": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "balance_warning_limit": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "callback_url": {
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/Reseller_contact"
          },
          "corp_rate_revenue": {
            "description": "corporate revenue in percent",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": 0,
            "type": "number"
          },
          "credit_limit": {
            "default": 0,
            "description": "postpaid limit",
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "credit_limit_in_additional_currency": {
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "credit_warning_limit": {
            "default": 0,
            "description": "credit warning limit in percentage",
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "currency_code": {
            "default": "USD",
            "enum": [
              "USD"
            ],
            "type": "string"
          },
          "custom_email_template_data": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_expired": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "custom_email_template_qr": {
            "description": "Preferably HTML FILE",
            "format": "binary",
            "maxLength": 1048576,
            "type": "string"
          },
          "data_consumption_email": {
            "$ref": "#/components/schemas/Reseller_data_consumption_email"
          },
          "data_expired_email": {
            "$ref": "#/components/schemas/Reseller_data_expired_email"
          },
          "date_created": {
            "format": "date",
            "readOnly": true,
            "type": "string"
          },
          "default_currency_code": {
            "default": "USD",
            "maxLength": 15,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "email_settings": {
            "$ref": "#/components/schemas/Reseller_email_settings"
          },
          "image": {
            "description": "The image file of the user",
            "format": "binary",
            "type": "string"
          },
          "image_type": {
            "type": "string"
          },
          "is_active": {
            "default": false,
            "type": "boolean"
          },
          "is_whitelabel": {
            "default": false,
            "type": "boolean"
          },
          "notification_type": {
            "type": "string"
          },
          "qr_code_email": {
            "$ref": "#/components/schemas/Reseller_qr_code_email"
          },
          "rate_revenue": {
            "default": 0,
            "description": "rate revenue in percent",
            "example": 12,
            "format": "float",
            "maximum": 200,
            "minimum": 0,
            "type": "number"
          },
          "request_custom_email": {
            "default": true,
            "type": "boolean"
          },
          "reseller_category": {
            "type": "string"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "readOnly": true,
            "type": "string"
          },
          "reseller_name": {
            "example": "Nakhal",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "reseller_type": {
            "default": "prepaid",
            "enum": [
              "prepaid",
              "postpaid"
            ],
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "support_topup": {
            "default": false,
            "type": "boolean"
          },
          "supports_multibranches": {
            "default": false,
            "type": "boolean"
          },
          "supports_promo": {
            "type": "boolean"
          },
          "supports_vouchers": {
            "type": "boolean"
          },
          "tenant_name": {
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "vendors_for_balance_deduction_list": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "voucher_rate": {
            "example": 12,
            "format": "float",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "balance",
          "contact",
          "currency_code",
          "date_created",
          "is_active",
          "reseller_id",
          "reseller_name",
          "reseller_type",
          "support_topup"
        ],
        "type": "object"
      },
      "ResellerScopedBundle": {
        "properties": {
          "bundle_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "bundle_name": {
            "type": "string"
          },
          "data_size": {
            "type": "string"
          },
          "data_unit": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "region": {
            "type": "string"
          },
          "supported_countries": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "validity_days": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Reseller_contact": {
        "example": {
          "address": "address",
          "emails": [
            "xyz@hotmail.com",
            "xyz@hotmail.com"
          ],
          "phones": [
            "phones",
            "phones"
          ],
          "website": "www.xyz.com"
        },
        "properties": {
          "address": {
            "maxLength": 300,
            "type": "string"
          },
          "emails": {
            "items": {
              "example": "xyz@hotmail.com",
              "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-]+)(\\.[a-zA-Z]{2,5}){1,2}$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "phones": {
            "items": {
              "pattern": "^\\+(?:[0-9] ?){6,14}[0-9]$",
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "website": {
            "example": "www.xyz.com",
            "nullable": true,
            "pattern": "(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)",
            "type": "string"
          }
        },
        "required": [
          "emails",
          "phones"
        ],
        "type": "object"
      },
      "Reseller_custom_price_csv_body": {
        "additionalProperties": false,
        "properties": {
          "file": {
            "format": "binary",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "type": "object"
      },
      "Reseller_data_consumption_email": {
        "example": {
          "body_1": "body_1",
          "body_2": "body_2",
          "company_name_team": "company_name_team",
          "email-image_type": "email-image_type",
          "email-logo_type": "email-logo_type",
          "email_image_consumption": "email_image_consumption",
          "email_logo": "email_logo",
          "facebook_link": "facebook_link",
          "footer": "footer",
          "greetings": "greetings",
          "instagram_link": "instagram_link",
          "subject_consumption": "subject_consumption",
          "website_link": "website_link",
          "whatsapp_number": "whatsapp_number"
        },
        "properties": {
          "body_1": {
            "type": "string"
          },
          "body_2": {
            "type": "string"
          },
          "company_name_team": {
            "type": "string"
          },
          "email-image_type": {
            "type": "string"
          },
          "email-logo_type": {
            "type": "string"
          },
          "email_image_consumption": {
            "type": "string"
          },
          "email_logo": {
            "type": "string"
          },
          "facebook_link": {
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "greetings": {
            "type": "string"
          },
          "instagram_link": {
            "type": "string"
          },
          "subject_consumption": {
            "type": "string"
          },
          "website_link": {
            "type": "string"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Reseller_data_expired_email": {
        "example": {
          "body_1": "body_1",
          "body_2": "body_2",
          "company_name_team": "company_name_team",
          "email-image_type": "email-image_type",
          "email-logo_type": "email-logo_type",
          "email_image_expired": "email_image_expired",
          "email_logo": "email_logo",
          "facebook_link": "facebook_link",
          "footer": "footer",
          "greetings": "greetings",
          "instagram_link": "instagram_link",
          "subject_expired": "subject_expired",
          "website_link": "website_link",
          "whatsapp_number": "whatsapp_number"
        },
        "properties": {
          "body_1": {
            "type": "string"
          },
          "body_2": {
            "type": "string"
          },
          "company_name_team": {
            "type": "string"
          },
          "email-image_type": {
            "type": "string"
          },
          "email-logo_type": {
            "type": "string"
          },
          "email_image_expired": {
            "type": "string"
          },
          "email_logo": {
            "type": "string"
          },
          "facebook_link": {
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "greetings": {
            "type": "string"
          },
          "instagram_link": {
            "type": "string"
          },
          "subject_expired": {
            "type": "string"
          },
          "website_link": {
            "type": "string"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Reseller_email_settings": {
        "additionalProperties": false,
        "example": {
          "password": "password",
          "smtp_port": "smtp_port",
          "smtp_server": "smtp_server",
          "username": "xyz@hotmail.com"
        },
        "properties": {
          "password": {
            "maximum": 50,
            "minimum": 8,
            "type": "string"
          },
          "smtp_port": {
            "maxLength": 5,
            "pattern": "^[0-9]*$",
            "type": "string"
          },
          "smtp_server": {
            "type": "string"
          },
          "username": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          }
        },
        "required": [
          "password",
          "smtp_port",
          "smtp_server",
          "username"
        ],
        "type": "object"
      },
      "Reseller_qr_code_email": {
        "example": {
          "activation_code": "activation_code",
          "android_users": "android_users",
          "body_1": "body_1",
          "body_2": "body_2",
          "bundle_consumption_link": "bundle_consumption_link",
          "bundle_consumption_sentence": "bundle_consumption_sentence",
          "company_name_team": "company_name_team",
          "data_bundle_details": "data_bundle_details",
          "email-image_type": "email-image_type",
          "email-logo_type": "email-logo_type",
          "email_image_qrcode": "email_image_qrcode",
          "email_logo": "email_logo",
          "facebook_link": "facebook_link",
          "footer": "footer",
          "greetings": "greetings",
          "instagram_link": "instagram_link",
          "instructions_link": "instructions_link",
          "invoice_details": "invoice_details",
          "ios_users": "ios_users",
          "matching_id": "matching_id",
          "smdp_address": "smdp_address",
          "subject_qrcode": "subject_qrcode",
          "topup_link": "topup_link",
          "topup_sentence": "topup_sentence",
          "website_link": "website_link",
          "whatsapp_number": "whatsapp_number"
        },
        "properties": {
          "activation_code": {
            "type": "string"
          },
          "android_users": {
            "type": "string"
          },
          "body_1": {
            "type": "string"
          },
          "body_2": {
            "type": "string"
          },
          "bundle_consumption_link": {
            "type": "string"
          },
          "bundle_consumption_sentence": {
            "type": "string"
          },
          "company_name_team": {
            "type": "string"
          },
          "data_bundle_details": {
            "type": "string"
          },
          "email-image_type": {
            "type": "string"
          },
          "email-logo_type": {
            "type": "string"
          },
          "email_image_qrcode": {
            "type": "string"
          },
          "email_logo": {
            "type": "string"
          },
          "facebook_link": {
            "type": "string"
          },
          "footer": {
            "type": "string"
          },
          "greetings": {
            "type": "string"
          },
          "instagram_link": {
            "type": "string"
          },
          "instructions_link": {
            "type": "string"
          },
          "invoice_details": {
            "type": "string"
          },
          "ios_users": {
            "type": "string"
          },
          "matching_id": {
            "type": "string"
          },
          "smdp_address": {
            "type": "string"
          },
          "subject_qrcode": {
            "type": "string"
          },
          "topup_link": {
            "type": "string"
          },
          "topup_sentence": {
            "type": "string"
          },
          "website_link": {
            "type": "string"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResendOrderEmailResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Email Sent Successfully",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Email Sent Successfully",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReserveBundleRequest": {
        "additionalProperties": false,
        "properties": {
          "bundle_code": {
            "example": "USA3GB_3102938429",
            "type": "string"
          },
          "email": {
            "example": "xyz@hotmail.com",
            "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$",
            "type": "string"
          },
          "name": {
            "example": "John Wick",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "order_reference": {
            "maxLength": 100,
            "type": "string"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReserveBundleResponse": {
        "additionalProperties": false,
        "example": {
          "additional_currency_code": "SAR",
          "developer_message": "Operation Succcessful",
          "iccid": "iccid",
          "message": "Bundle Reserved Successfully",
          "order_id": "507f191e810c19729de860ea",
          "remaining_wallet_balance": 30,
          "remaining_wallet_balance_in_additional_currency": 30,
          "reseller_id": "507f191e810c19729de860ea",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "message": {
            "example": "Bundle Reserved Successfully",
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 30,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "in additional currency",
            "example": 30,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResolveIssueRequest": {
        "additionalProperties": false,
        "properties": {
          "resolution": {
            "example": "Customer has been satisfied.",
            "maxLength": 10000,
            "type": "string"
          }
        },
        "required": [
          "resolution"
        ],
        "type": "object"
      },
      "ResolveIssueResponse": {
        "additionalProperties": false,
        "example": {
          "Message": "Issue Resolved Successfully"
        },
        "properties": {
          "Message": {
            "example": "Issue Resolved Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResponseEntity": {
        "additionalProperties": false,
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Role": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "example": "Has Full Authority Over Reseller",
            "maxLength": 2000,
            "minLength": 0,
            "pattern": "^[a-zA-Z .,']+$",
            "type": "string"
          },
          "name": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[a-zA-Z ']+$",
            "type": "string"
          },
          "role_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          }
        },
        "required": [
          "name",
          "role_id"
        ],
        "type": "object"
      },
      "ScopedBundlesResponse": {
        "properties": {
          "bundles": {
            "items": {
              "$ref": "#/components/schemas/ResellerScopedBundle"
            },
            "type": "array"
          },
          "limit": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "total_bundles": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SubmitFeedbackRequest": {
        "additionalProperties": false,
        "properties": {
          "comments": {
            "description": "Additional comments on the resolution process.",
            "type": "string"
          },
          "satisfaction": {
            "description": "User satisfaction rating (e.g., 1-5, with 5 being the highest).",
            "example": 4,
            "maximum": 5,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "satisfaction"
        ],
        "type": "object"
      },
      "SubmitFeedbackResponse": {
        "additionalProperties": false,
        "example": {
          "Message": "Feedback Submitted Successfully"
        },
        "properties": {
          "Message": {
            "example": "Feedback Submitted Successfully",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopupBalanceRequest": {
        "additionalProperties": false,
        "properties": {
          "credit_limit": {
            "example": 100,
            "format": "float",
            "minimum": 0,
            "type": "number"
          },
          "topup_amount": {
            "example": 30,
            "format": "float",
            "minimum": 0,
            "type": "number"
          }
        },
        "type": "object"
      },
      "TopupBalanceResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Wallet Topup Successful",
          "response_code": "1",
          "title": "Success",
          "wallet_balance": 1000
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Wallet Topup Successful",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "wallet_balance": {
            "description": "in dollars",
            "example": 1000,
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "TopupBundleRequest": {
        "additionalProperties": false,
        "properties": {
          "bundle_code": {
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "order_reference": {
            "description": "custom order reference",
            "maxLength": 100,
            "type": "string"
          },
          "previous_order_reference": {
            "description": "previous custom order reference to topup bundle",
            "maxLength": 100,
            "type": "string"
          },
          "whatsapp_number": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopupBundleResponse": {
        "additionalProperties": false,
        "example": {
          "additional_currency_code": "SAR",
          "developer_message": "Operation Succcessful",
          "iccid": "iccid",
          "message": "Bundle Assigned Successfully",
          "order_id": "507f191e810c19729de860ea",
          "remaining_wallet_balance": 30,
          "remaining_wallet_balance_in_additional_currency": 30,
          "reseller_id": "507f191e810c19729de860ea",
          "response_code": "1",
          "title": "Success"
        },
        "properties": {
          "additional_currency_code": {
            "example": "SAR",
            "maxLength": 15,
            "type": "string"
          },
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "iccid": {
            "pattern": "^\\d{18,20}$",
            "type": "string"
          },
          "message": {
            "example": "Bundle Assigned Successfully",
            "type": "string"
          },
          "order_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "remaining_wallet_balance": {
            "description": "in dollars",
            "example": 30,
            "format": "float",
            "type": "number"
          },
          "remaining_wallet_balance_in_additional_currency": {
            "description": "in additional currency",
            "example": 30,
            "format": "float",
            "type": "number"
          },
          "reseller_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateAdminPermissionsResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "SimWeGo Admin Role Updated Successfully.",
          "response_code": "1",
          "role_id": "507f191e810c19729de860ea",
          "title": "Success"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "SimWeGo Admin Role Updated Successfully.",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "role_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateVoucherAttributesRequest": {
        "additionalProperties": false,
        "properties": {
          "status": {
            "enum": [
              "active",
              "inactive"
            ],
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "UpdateVoucherAttributesResponse": {
        "additionalProperties": false,
        "example": {
          "developer_message": "Operation Succcessful",
          "message": "Voucher Updated Successfully.",
          "response_code": "1",
          "title": "Success",
          "voucher_id": "507f191e810c19729de860ea"
        },
        "properties": {
          "developer_message": {
            "example": "Operation Succcessful",
            "type": "string"
          },
          "message": {
            "example": "Voucher Updated Successfully.",
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[\\s\\S]+$",
            "type": "string"
          },
          "response_code": {
            "example": "1",
            "format": "hex",
            "maxLength": 4,
            "minLength": 4,
            "pattern": "^[0-9a-fA-F]{4}$",
            "type": "string"
          },
          "title": {
            "example": "Success",
            "type": "string"
          },
          "voucher_id": {
            "example": "507f191e810c19729de860ea",
            "format": "hex",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-fA-F]{24}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "inline_response_200": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ScopedBundlesResponse"
          },
          {
            "$ref": "#/components/schemas/RegionGroupedBundlesResponse"
          }
        ]
      },
      "inline_response_204": {
        "additionalProperties": false,
        "properties": {
          "detail": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "responses": {
      "200": {
        "description": "Ok",
        "headers": {
          "Cache-Control": {
            "explode": false,
            "schema": {
              "default": "no-store",
              "enum": [
                "no-store"
              ],
              "type": "string"
            },
            "style": "simple"
          }
        }
      },
      "201": {
        "description": "Created",
        "headers": {
          "Cache-Control": {
            "explode": false,
            "schema": {
              "default": "no-store",
              "enum": [
                "no-store"
              ],
              "type": "string"
            },
            "style": "simple"
          }
        }
      },
      "204": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/inline_response_204"
            }
          }
        },
        "description": "Not Found'",
        "headers": {
          "Cache-Control": {
            "explode": false,
            "schema": {
              "default": "no-store",
              "enum": [
                "no-store"
              ],
              "type": "string"
            },
            "style": "simple"
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "headers": {
          "Cache-Control": {
            "explode": false,
            "schema": {
              "default": "no-store",
              "enum": [
                "no-store"
              ],
              "type": "string"
            },
            "style": "simple"
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "headers": {
          "Cache-Control": {
            "explode": false,
            "schema": {
              "default": "no-store",
              "enum": [
                "no-store"
              ],
              "type": "string"
            },
            "style": "simple"
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/v0/Affiliate": {
      "get": {
        "description": "Can be called to view reseller Affiliate Program.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_affiliate_program",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "affiliate_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAffiliateProgramResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "summary": "Get Affiliate Program",
        "tags": [
          "Affiliate"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.affiliate_controller",
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v0/Agent": {
      "get": {
        "description": "Gets all Agents , can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_agent",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin and reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentsResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets all  Agents",
        "tags": [
          "Agent"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.agent_controller"
      },
      "post": {
        "description": "Adds a Agent to branch, can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "add_agent",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin and reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAgentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAgentResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add Agent to Branch.",
        "tags": [
          "Agent"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.agent_controller"
      }
    },
    "/api/v0/Agent/GetAgentByEmail": {
      "post": {
        "description": "Gets a Agent by Email, can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_agent_by_email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAgentByEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets Agent by Email",
        "tags": [
          "Agent"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.agent_controller"
      }
    },
    "/api/v0/Agent/forgot-password": {
      "post": {
        "description": "Allows the user to reset password via email.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "forgot_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "summary": "Submit a forgot Password request.",
        "tags": [
          "Agent"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.agent_controller",
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v0/Agent/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login with Monty credentials (returns tokens)",
        "description": "\n                **Special endpoint for login flow**\n                \n                This endpoint allows you to login with your Monty username/password to get access tokens.\n                \n                **Note**: For all other endpoints, just use your SimWeGo API key in the Authorization header.\n                \n                This login is useful for:\n                - Getting initial access tokens\n                - Testing your Monty credentials\n                - Manual token management (advanced users)\n                ",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Your Monty username",
                    "example": "your_simwego_username"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "Your Monty password",
                    "example": "your_simwego_password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "agentId": {
                          "type": "string"
                        },
                        "resellerId": {
                          "type": "string"
                        }
                      }
                    },
                    "tokens": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string"
                        },
                        "refresh_token": {
                          "type": "string"
                        },
                        "expires_in": {
                          "type": "integer"
                        },
                        "token_type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0/Agent/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout",
        "description": "Logout and invalidate cached tokens",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0/Agent/reset-password": {
      "post": {
        "description": "Allows the user to reset password.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "reset_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordResetResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "summary": "Resets User Password .",
        "tags": [
          "Agent"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.agent_controller",
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v0/Agent/{AgentID}": {
      "delete": {
        "deprecated": true,
        "description": "Allows PERSONNEL to delete Agent.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "delete_agent",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "AgentID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAgentResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Agent",
        "tags": [
          "Agent"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.agent_controller"
      },
      "get": {
        "description": "Gets a Agent by ID , can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_agent_by_id",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "AgentID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentProfile"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets Agent by ID",
        "tags": [
          "Agent"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.agent_controller"
      },
      "put": {
        "description": "Allows admins to edit an Agent\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "edit_agent",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "AgentID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAgentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditAgentResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Edit Agent",
        "tags": [
          "Agent"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.agent_controller"
      }
    },
    "/api/v0/AllNetworkList": {
      "get": {
        "description": "Gets all Network lists , can be called by users.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_all_network_list",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllNetworkList_networksResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets all Network lists from for all bundles",
        "tags": [
          "NetworkList"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.network_list_controller"
      }
    },
    "/api/v0/AvailableCountries": {
      "get": {
        "description": "Can be called by users to view all counties available\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_countries",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "reseller_admin_view",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "Language in which country name returns.",
            "explode": true,
            "in": "query",
            "name": "lang",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCountriesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all countries Available",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/AvailableCurrencies": {
      "get": {
        "description": "Can be called by users to view all currencies available\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_currencies",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "reseller_admin_view",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrenciesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all currencies Available",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      },
      "post": {
        "description": "Allows a Super admin to manage Currencies.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "manage_currencies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizeCurrenciesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizeCurrenciesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Manage Currencies.",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/AvailableCurrenciesCSV": {
      "post": {
        "description": "Allows a Super admin to manage Currencies.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "manage_currencies_csv",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvailableCurrenciesCSV_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizeCurrenciesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Manage Currencies.",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/AvailableRegions": {
      "get": {
        "description": "Can be called by users to view all regions available\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_regions",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "reseller_admin_view",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "Language in which region name returns.",
            "explode": true,
            "in": "query",
            "name": "lang",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionsResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all regions Available",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Branch": {
      "get": {
        "description": "Gets all Branches , can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_branch",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "dropdown",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBranchesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets all  Branches",
        "tags": [
          "Branch"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.branch_controller"
      },
      "post": {
        "description": "Adds a Branch to platform, can be called by Reseller Admin.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "add_branch",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBranchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBranchResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Adds a Branch to platform.",
        "tags": [
          "Branch"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.branch_controller"
      }
    },
    "/api/v0/Branch/{BranchID}": {
      "delete": {
        "description": "Allows PERSONNEL to delete Branch.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "delete_branch",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "BranchID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBranchResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Branch",
        "tags": [
          "Branch"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.branch_controller"
      },
      "get": {
        "description": "Gets a Branch by ID , can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_branch_by_id",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "BranchID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBranchResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets Branch by ID",
        "tags": [
          "Branch"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.branch_controller"
      },
      "put": {
        "description": "Allows admins to edit Branch\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "edit_branch",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "BranchID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBranchRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditBranchResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Edit Branch",
        "tags": [
          "Branch"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.branch_controller"
      }
    },
    "/api/v0/Bundles": {
      "get": {
        "description": "Can be called by users to view all bundles available\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_bundles_of_country",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "bundle_category",
            "required": false,
            "schema": {
              "enum": [
                "global",
                "region",
                "country",
                "cruise"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_name",
            "required": false,
            "schema": {
              "maxLength": 100,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "sorting parameter",
            "explode": true,
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "enum": [
                "price_asc",
                "price_dsc",
                "bundle_name",
                "data_asc",
                "data_dsc",
                "sms_asc",
                "sms_dsc",
                "voice_asc",
                "voice_dsc"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "reseller_admin_view",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_tag",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "region_code",
            "required": false,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_code",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBundlesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all country bundles Available",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      },
      "post": {
        "description": "Checks if the reseller has balance, and if the bundle is available, and assigns it to a user.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "assign_bundle",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignBundleResponse"
                }
              }
            },
            "description": "Token found"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Assign Bundle",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Bundles/AvailableTopup": {
      "get": {
        "description": "Allows the user to view all bundles that are available with the Esim Profile Installed.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_available_topup_bundles",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "bundle_code",
            "required": true,
            "schema": {
              "example": "GBR_1213202219550292",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_name",
            "required": false,
            "schema": {
              "maxLength": 100,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "sorting parameter",
            "explode": true,
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "enum": [
                "price_asc",
                "price_dsc",
                "bundle_name",
                "data_asc",
                "data_dsc"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_tag",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "region_code",
            "required": false,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBundlesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get available topup bundles",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Bundles/CSV": {
      "get": {
        "description": "Can be called by users to view all bundles available\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_bundles_of_country_csv",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "bundle_category",
            "required": false,
            "schema": {
              "enum": [
                "global",
                "region",
                "country",
                "cruise"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_name",
            "required": false,
            "schema": {
              "maxLength": 100,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "sorting parameter",
            "explode": true,
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "enum": [
                "price_asc",
                "price_dsc",
                "bundle_name",
                "data_asc",
                "data_dsc",
                "sms_asc",
                "sms_dsc",
                "voice_asc",
                "voice_dsc"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "reseller_admin_view",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string",
                  "x-content-type": "application/octet-stream"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all country bundles Available CSV",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Bundles/Cancel": {
      "post": {
        "description": "Allow to cancel an order.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "cancel_bundle",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelBundleResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Cancel Order.",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Bundles/Complete": {
      "post": {
        "description": "Complete transaction and send profile information\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "complete_transaction",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteTransactionResponse"
                }
              }
            },
            "description": "Token found"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Complete transaction",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Bundles/Networks": {
      "get": {
        "description": "Gets the bundle network list , can be called by users.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_bundle_network_list",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "bundle_code",
            "required": true,
            "schema": {
              "example": "GBR_1213202219550292",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BundleNetworkList"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets the bundle network list",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Bundles/Reserve": {
      "post": {
        "description": "Checks if the reseller has balance, and if the bundle is available, and assigns it to a user.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "reserve_bundle",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReserveBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReserveBundleResponse"
                }
              }
            },
            "description": "Token found"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Reserve Bundle",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Bundles/Topup": {
      "get": {
        "deprecated": true,
        "description": "Allows the user to view all bundles that are compatible with the Esim Profile Installed.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_compatible_topup_bundles",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "bundle_code",
            "required": true,
            "schema": {
              "example": "GBR_1213202219550292",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_name",
            "required": false,
            "schema": {
              "maxLength": 100,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "sorting parameter",
            "explode": true,
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "enum": [
                "price_asc",
                "price_dsc",
                "bundle_name",
                "data_asc",
                "data_dsc"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_tag",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBundlesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get compatible topup bundles",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      },
      "post": {
        "description": "Checks if the reseller has balance, and if the bundle is available, topups the bundle of the user.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "topup_bundle",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin and reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopupBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopupBundleResponse"
                }
              }
            },
            "description": "Token found"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Topup Bundle",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Bundles/V2": {
      "get": {
        "description": "Can be called by users to view all bundles available\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_bundles_of_country_v2",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "bundle_category",
            "required": false,
            "schema": {
              "enum": [
                "global",
                "region",
                "country",
                "cruise"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_name",
            "required": false,
            "schema": {
              "maxLength": 100,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "sorting parameter",
            "explode": true,
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "enum": [
                "price_asc",
                "price_dsc",
                "bundle_name",
                "data_asc",
                "data_dsc"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "reseller_admin_view",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_tag",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "region_code",
            "required": false,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_code",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "country_code_array",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBundlesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all country bundles Available",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/HealthCheck": {
      "get": {
        "description": "a simple api to test if server is up and running\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "health_check",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": "Welcome To Reseller Portal! The server is Up and Running.",
                  "type": "string",
                  "x-content-type": "application/json"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "summary": "Check Server",
        "tags": [
          "Welcome"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.welcome_controller",
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v0/IssueReport": {
      "get": {
        "description": "Gets all Issues Reported , can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_issue_report",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": true,
            "in": "query",
            "name": "IssueReportID",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "show_branches",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "pattern": "^[^\\[\\]\\{\\}]*$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueReport"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets all  Issues Reported",
        "tags": [
          "IssueReport"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.issue_report_controller"
      },
      "post": {
        "description": "Submit a technical issue or pricing concern report.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "add_issue_report",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddIssueReportRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddIssueReportResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Submit an Issue Report.",
        "tags": [
          "IssueReport"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.issue_report_controller"
      }
    },
    "/api/v0/IssueReport/{ReportID}": {
      "delete": {
        "description": "Allows PERSONNEL to delete IssueReport.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "delete_issue_report",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "ReportID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteIssueReportResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete IssueReport",
        "tags": [
          "IssueReport"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.issue_report_controller"
      },
      "put": {
        "description": "Manage the issue report\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "edit_issue_report",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "ReportID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditIssueReportRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditIssueReportResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Modify Issue Report",
        "tags": [
          "IssueReport"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.issue_report_controller"
      }
    },
    "/api/v0/IssueReport/{ReportID}/Feedback": {
      "put": {
        "description": "Submit feedback on the satisfaction of issue resolution.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "submit_feedback",
        "parameters": [
          {
            "description": "ID of the issue report.",
            "explode": false,
            "in": "path",
            "name": "ReportID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitFeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitFeedbackResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Submit Feedback for Issue Resolution",
        "tags": [
          "IssueReport"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.issue_report_controller"
      }
    },
    "/api/v0/NetworkList": {
      "get": {
        "description": "Gets all Network lists , can be called by users.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_network_list",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "network_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkList"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets all Network lists",
        "tags": [
          "NetworkList"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.network_list_controller"
      },
      "post": {
        "description": "Adds a NetworkList to branch, can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "manage_network_list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageNetworkListRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageNetworkListResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "manage network lists to branch.",
        "tags": [
          "NetworkList"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.network_list_controller"
      }
    },
    "/api/v0/NetworkList/{network_id}": {
      "delete": {
        "description": "Allows admin to delete a Network.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "delete_network_list",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "network_id",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteNetworkListResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete NetworkList",
        "tags": [
          "NetworkList"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.network_list_controller"
      }
    },
    "/api/v0/NetworkListByRegions": {
      "get": {
        "description": "Gets all Network lists , can be called by users.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_network_list_by_regions",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "network_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "region_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkListByRegionsResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets all Network lists",
        "tags": [
          "NetworkList"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.network_list_controller"
      }
    },
    "/api/v0/NetworkListCSV": {
      "post": {
        "description": "Allows a Super admin to manage Networks Via CSV File.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "manage_networks_csv",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NetworkListCSV_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageNetworkListResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Manage Networks CSV.",
        "tags": [
          "NetworkList"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.network_list_controller"
      }
    },
    "/api/v0/Orders": {
      "get": {
        "description": "Can be called to view reseller order history.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_order_history",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "example": "USA",
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "order_reference",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "JSON array of fields to search within (e.g., [\"Order Status\", \"Order Date\"]).\n",
            "explode": true,
            "in": "query",
            "name": "fields_to_search",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "order_status",
                  "bundle_name",
                  "client_email",
                  "client_name",
                  "bundle_price",
                  "bundle_retail_price",
                  "whatsapp_number"
                ],
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderHistoryResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Order History",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Orders/Consumption": {
      "get": {
        "description": "Can be called to view user bundle consumption and status.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_bundle_consumption",
        "parameters": [
          {
            "description": "order id",
            "explode": true,
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "order_reference",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBundleConsumptionResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Bundle Consumption",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Orders/Dashboard": {
      "get": {
        "description": "Can be called to view reseller bundles sold chard, top 5 bundles, and sales volume.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_dashboard",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "example": "USA",
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDashboardResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Dashboard",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Orders/MyeSimConsumption": {
      "get": {
        "description": "Can be called to view user bundle consumption and status.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_my_bundle_consumption",
        "parameters": [
          {
            "description": "order id",
            "explode": true,
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "otp",
            "required": false,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "order_reference",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyBundleConsumptionResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "summary": "Get my Bundle Consumption",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller",
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v0/Orders/PlanHistory": {
      "get": {
        "description": "Can be called to view reseller order history.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_plan_history",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "example": "USA",
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "order_reference",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "JSON array of fields to search within (e.g., [\"Order Status\", \"Order Date\"]).\n",
            "explode": true,
            "in": "query",
            "name": "fields_to_search",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "order_status",
                  "bundle_name",
                  "client_email",
                  "client_name",
                  "bundle_price",
                  "bundle_retail_price",
                  "whatsapp_number"
                ],
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "iccid",
            "required": false,
            "schema": {
              "example": "8943108161000050000",
              "maxLength": 30,
              "pattern": "^\\d{18,20}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPlanHistoryResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Plan History",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Orders/Refund": {
      "post": {
        "description": "Allows SuperAdmin to Refund an order.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "refund_order",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundOrderResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Refund Order.",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Orders/ResendEmail": {
      "post": {
        "description": "Allows User to Resend an order email to deliver invoice and qr code.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "resend_order_email",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orders_ResendEmail_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendOrderEmailResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Resend Order Email.",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Orders/SendConsumptionEmail": {
      "post": {
        "description": "Allows User to Send Consumption Email to the user upon certain thresholds.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "send_consumption_email",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "notification_type",
            "required": true,
            "schema": {
              "enum": [
                "Expired",
                "Eighty"
              ],
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orders_SendConsumptionEmail_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResendOrderEmailResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Send Consumption Email.",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Promocode": {
      "get": {
        "description": "Can be called to view reseller promocode order history.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_promocode_history",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "promocode",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "customer_name",
            "required": false,
            "schema": {
              "example": "john snow",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z ']+$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "affiliate_program",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromocodeHistoryResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Promocode Order History",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Promocode/Dashboard": {
      "get": {
        "description": "Can be called to view reseller promocode bundles sold chart\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_promocode_dashboard",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "promocode",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "affiliate_program",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPromoDashboardResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Promocode Dashboard",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Reseller": {
      "get": {
        "description": "Gets all Resellers , can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_reseller",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "dropdown",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "reseller_name",
            "required": false,
            "schema": {
              "maxLength": 100,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "supports_promo",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "supports_voucher",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "currency_code to preview",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "is_whitelabel",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "reseller_category",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetResellersResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets all  Resellers",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      },
      "post": {
        "description": "Adds a Reseller to platform, can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "add_reseller",
        "parameters": [
          {
            "description": "currency_code for operation",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddResellerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddResellerResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Adds a Reseller to platform.",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      }
    },
    "/api/v0/Reseller/Admin/custom_corporate_price": {
      "post": {
        "description": "Allows a reseller agent to customize bundle retail price.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "customize_corporate_price",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency_code to preview",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizeCorpPriceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizePriceResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Customize Bundle Unit Price.",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      }
    },
    "/api/v0/Reseller/Admin/custom_corporate_price_csv": {
      "post": {
        "description": "Allows a reseller agent to customize bundle retail price by CSV files.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "customize_corporate_price_csv",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Admin_custom_corporate_price_csv_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizePriceResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Customize Bundle Unit Price CSV file.",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      }
    },
    "/api/v0/Reseller/AvailableResellerProperties": {
      "get": {
        "description": "Allows the user to view all properties that are available for resellers.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "available_reseller_properties",
        "parameters": [
          {
            "description": "category names list of resellers",
            "explode": true,
            "in": "query",
            "name": "category_names_list",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailableResellerPropertiesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get available properties of resellers",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      }
    },
    "/api/v0/Reseller/Bundles/Scope": {
      "get": {
        "description": "Returns bundles grouped by their availability scope: region, country, or global.\n**Filtering Rules**: - Use the `filter` query parameter to specify grouping scope: `region`, `countries`, or `global`. - Pagination is supported via `page` and `limit`.\n**Region Rules**: - Bundles are grouped under one of the following display regions: Africa, Asia, Europe, Middle East, North America, South America. - **Turkey** is grouped under Europe by default. But if a bundle contains **Turkey and a Middle Eastern country**, it is grouped under Middle East. - **Oceania** countries are grouped under **Asia**. - **Central America** and **Caribbean** countries are grouped under **South America**. - Bundles are **never duplicated across regions**\u00e2\u20ac\u201deach belongs to one region only.\n**Global Rules**: - Bundles in the `global` scope must cover **more than 50 countries**.\n**Data size input rules**: - If the value is **less than 1**, it is multiplied by 1000 and treated as megabytes. - If the value is **1 or more**, it is treated as gigabytes.\n**Examples**: - To filter for **500 MB**, pass `0.5` - To filter for **500 GB**, pass `500`\n\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_reseller_bundles_by_scope",
        "parameters": [
          {
            "description": "Determines how bundles are grouped: - `region`: groups bundles under regions like Europe, Asia, etc. - `countries`: returns all bundles scoped to specific countries, regions, or global (flat list). - `global`: returns only global bundles covering over 50 countries.\n",
            "explode": true,
            "in": "query",
            "name": "geoscope",
            "required": true,
            "schema": {
              "enum": [
                "region",
                "countries",
                "global"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Page number for pagination.",
            "explode": true,
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Maximum number of bundles per page.",
            "explode": true,
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 20,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Minimum data size (e.g., \"0.5\" for 500MB or \"1\" for 1GB).  If value < 1, it is multiplied by 1000 and treated as megabytes.  If >= 1, it is treated as gigabytes.\n",
            "explode": true,
            "in": "query",
            "name": "data_size_min",
            "required": false,
            "schema": {
              "pattern": "^\\d+(\\.\\d+)?$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Maximum data size (e.g., \"0.5\" for 500MB or \"1\" for 1GB).  If value < 1, it is multiplied by 1000 and treated as megabytes.  If >= 1, it is treated as gigabytes.\n",
            "explode": true,
            "in": "query",
            "name": "data_size_max",
            "required": false,
            "schema": {
              "pattern": "^\\d+(\\.\\d+)?$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Minimum validity period in days.",
            "explode": true,
            "in": "query",
            "name": "validity_days_min",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Maximum validity period in days.",
            "explode": true,
            "in": "query",
            "name": "validity_days_max",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Minimum bundle price.",
            "explode": true,
            "in": "query",
            "name": "price_min",
            "required": false,
            "schema": {
              "pattern": "^\\d+(\\.\\d+)?$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Maximum bundle price.",
            "explode": true,
            "in": "query",
            "name": "price_max",
            "required": false,
            "schema": {
              "pattern": "^\\d+(\\.\\d+)?$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            },
            "description": "Successful response with bundles grouped by region or as a flat list"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get reseller bundles grouped by scope (region, countries, or global)",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/api/v0/Reseller/Topup/{ResellerID}": {
      "post": {
        "description": "Allows a simwego agent to topup reseller wallet balance.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "topup_reseller_balance",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "ResellerID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "currency_code to preview",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopupBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopupBalanceResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Topup Reseller Balance.",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      }
    },
    "/api/v0/Reseller/custom_price": {
      "post": {
        "description": "Allows a reseller agent to customize bundle retail price.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "customize_price",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency_code to preview",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomizePriceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizePriceResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Customize Bundle Price.",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      }
    },
    "/api/v0/Reseller/custom_price_csv": {
      "post": {
        "description": "Allows a reseller agent to customize bundle retail price via Excel CSV File.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "customize_price_csv",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Reseller_custom_price_csv_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomizePriceResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Customize Bundle Price.",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      }
    },
    "/api/v0/Reseller/{ResellerID}": {
      "delete": {
        "description": "Allows PERSONNEL to delete Reseller.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "delete_reseller",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "ResellerID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResellerResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Reseller",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      },
      "get": {
        "description": "Gets a Reseller by ID , can be called by PERSONNEL.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_reseller_by_id",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "ResellerID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "currency_code to preview",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetResellerResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Gets Reseller by ID",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      },
      "put": {
        "description": "Allows admins to edit Reseller\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "edit_reseller",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "ResellerID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditResellerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditResellerResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Edit Reseller",
        "tags": [
          "Reseller"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.reseller_controller"
      }
    },
    "/api/v0/ResolveIssue/{ReportID}": {
      "put": {
        "description": "Resolve and finalize an Issue Report.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "resolve_issue",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "ReportID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveIssueRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResolveIssueResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Resolve an Issue Report.",
        "tags": [
          "IssueReport"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.issue_report_controller"
      }
    },
    "/api/v0/Role": {
      "post": {
        "description": "Takes a role object and inserts it into the DB\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "create_role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoleResponse"
                }
              }
            },
            "description": "Created Role Successfully"
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a new role.",
        "tags": [
          "Role"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.role_controller"
      }
    },
    "/api/v0/Role/All": {
      "get": {
        "description": "Returns a list of roles on the platform. Gives the user the role's name, id and description.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_all_roles",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllRolesResponse"
                }
              }
            },
            "description": "Returned Successfully"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns all roles in platform",
        "tags": [
          "Role"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.role_controller"
      }
    },
    "/api/v0/Role/{RoleID}": {
      "delete": {
        "description": "Deletes specific role by ID\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "delete_role",
        "parameters": [
          {
            "description": "id value of role that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "RoleID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRoleResponse"
                }
              }
            },
            "description": "Deleted Successfully"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes specific role by ID",
        "tags": [
          "Role"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.role_controller"
      },
      "get": {
        "description": "Returns specific role by ID\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_role_by_id",
        "parameters": [
          {
            "description": "id value of role that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "RoleID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleResponse"
                }
              }
            },
            "description": "Returned Successfully"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns specific role by ID",
        "tags": [
          "Role"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.role_controller"
      },
      "put": {
        "description": "Allows admins to edit a Role\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "edit_role",
        "parameters": [
          {
            "description": "id value of role that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "RoleID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRoleRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditRoleResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Edit Role",
        "tags": [
          "Role"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.role_controller"
      }
    },
    "/api/v0/Roles/UMAP": {
      "patch": {
        "description": "Updates Monty Admin Role with all Permissions Available.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "update_simwego_admin_permissions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAdminPermissionsResponse"
                }
              }
            },
            "description": "Added APIs to role's permissions successfully."
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates Monty Admin Permissions.",
        "tags": [
          "Role"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.role_controller"
      }
    },
    "/api/v0/Token/Refresh": {
      "post": {
        "description": "Takes a refresh Token and grants the user a new Access token and refresh Token.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "refresh_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            },
            "description": "Token found"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "summary": "Token Refresher",
        "tags": [
          "Token"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.token_controller",
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/api/v0/Transactions": {
      "get": {
        "description": "Can be called to view reseller transaction history.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_transaction_history",
        "parameters": [
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "show_branches",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionHistoryResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Transaction History",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Transactions/{TransactionID}": {
      "put": {
        "description": "Allows Super admin to edit a Transaction\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "edit_transaction",
        "parameters": [
          {
            "description": "id value that needs to be considered for filter",
            "explode": false,
            "in": "path",
            "name": "TransactionID",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "branch id for super admin, reseller admin",
            "explode": true,
            "in": "query",
            "name": "branch_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency_code to preview",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopupBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditTopupBalanceResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Edit Transaction",
        "tags": [
          "Orders"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.orders_controller"
      }
    },
    "/api/v0/Voucher": {
      "get": {
        "description": "Can be called to view reseller Vouchers generated.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_vouchers",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "voucher_name",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVouchersBundledResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Vouchers Generated bundled in voucher names",
        "tags": [
          "Voucher"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.voucher_controller"
      }
    },
    "/api/v0/Voucher/Details": {
      "get": {
        "description": "Can be called to view reseller Vouchers generated.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_voucher_codes",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "voucher_name",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "available",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVouchersResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Vouchers Generated",
        "tags": [
          "Voucher"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.voucher_controller"
      },
      "patch": {
        "description": "Updates Voucher Attributes.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "patch_voucher",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "voucher id",
            "explode": true,
            "in": "query",
            "name": "voucher_id",
            "required": true,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVoucherAttributesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateVoucherAttributesResponse"
                }
              }
            },
            "description": "Updated Voucher Successfully."
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates Voucher Attributes",
        "tags": [
          "Voucher"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.voucher_controller"
      }
    },
    "/api/v0/Voucher/Generate": {
      "post": {
        "description": "Checks if the reseller has balance, and generates a voucher\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "generate_voucher",
        "parameters": [
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateVoucherRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateVoucherResponse"
                }
              }
            },
            "description": "Token found"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Generate Voucher",
        "tags": [
          "Voucher"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.voucher_controller"
      }
    },
    "/api/v0/Voucher/History": {
      "get": {
        "description": "Can be called to view reseller Voucher Use history.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_voucher_code_history",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "voucher_name",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "beginning date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "end date for filtering the order",
            "explode": true,
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "maxLength": 50,
              "minLength": 0,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "export",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "example": "john snow",
              "maxLength": 20,
              "minLength": 1,
              "pattern": "^[a-zA-Z ']+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoucherUseHistoryResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Voucher Use History",
        "tags": [
          "Voucher"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.voucher_controller"
      }
    },
    "/api/v0/v2/Bundles/Topup": {
      "get": {
        "description": "Allows the user to view all bundles that are compatible with the Esim Profile Installed.\n\n**SimWeGo**: This endpoint is powered by SimWeGo infrastructure. Use your SimWeGo API key for authentication.",
        "operationId": "get_compatible_topup_bundles_v2",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "maxLength": 3,
              "minLength": 3,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "bundle_code",
            "required": true,
            "schema": {
              "example": "GBR_1213202219550292",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "enum": [
                10,
                25,
                50,
                100
              ],
              "type": "integer"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "reseller id for super admin",
            "explode": true,
            "in": "query",
            "name": "reseller_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_name",
            "required": false,
            "schema": {
              "maxLength": 100,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "sorting parameter",
            "explode": true,
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "enum": [
                "price_asc",
                "price_dsc",
                "bundle_name",
                "data_asc",
                "data_dsc",
                "sms_asc",
                "sms_dsc",
                "voice_asc",
                "voice_dsc"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "bundle_tag",
            "required": false,
            "schema": {
              "maxLength": 30,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "order_id",
            "required": false,
            "schema": {
              "example": "507f191e810c19729de860ea",
              "format": "hex",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-fA-F]{24}$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "previous_order_reference",
            "required": false,
            "schema": {
              "description": "previous custom order reference to topup bundle",
              "maxLength": 100,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "filter parameter",
            "explode": true,
            "in": "query",
            "name": "region_code",
            "required": false,
            "schema": {
              "maxLength": 10,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "currency code to preview in",
            "explode": true,
            "in": "query",
            "name": "currency_code",
            "required": false,
            "schema": {
              "example": "SAR",
              "maxLength": 10,
              "pattern": "^[a-zA-Z ]+$",
              "type": "string"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBundlesResponse"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_204"
                }
              }
            },
            "description": "Not Found'",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "Cache-Control": {
                "explode": false,
                "schema": {
                  "default": "no-store",
                  "enum": [
                    "no-store"
                  ],
                  "type": "string"
                },
                "style": "simple"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get compatible topup bundles",
        "tags": [
          "Bundles"
        ],
        "x-openapi-router-controller": "swagger_server.controllers.bundles_controller"
      }
    },
    "/": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "API Documentation and Information",
        "description": "Get comprehensive API documentation and architecture information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "architecture": {
                      "type": "object"
                    },
                    "endpoints": {
                      "type": "object"
                    },
                    "usage": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Health Check",
        "description": "Check API and backend service health",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Service healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "services": {
                      "type": "object"
                    },
                    "stats": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/test": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Connectivity Test",
        "description": "Test connectivity to Monty API backend",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Connectivity test results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "simwegoApi": {
                      "type": "string"
                    },
                    "simwegoConnection": {
                      "type": "string"
                    },
                    "responseTime": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v0/CheckToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Validate Token",
        "description": "Validate a Monty access token",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "SimWeGo access token to validate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token validation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "client": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
